
i2c.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000020a0  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  08002270  08002270  00012270  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002324  08002324  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  08002324  08002324  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002324  08002324  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002324  08002324  00012324  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002328  08002328  00012328  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  0800232c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000068  08002394  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08002394  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001d8d  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000007e5  00000000  00000000  00021e25  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002d8  00000000  00000000  00022610  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000270  00000000  00000000  000228e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00021037  00000000  00000000  00022b58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000312e  00000000  00000000  00043b8f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000c81f4  00000000  00000000  00046cbd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0010eeb1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000012c8  00000000  00000000  0010ef04  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000068 	.word	0x20000068
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08002258 	.word	0x08002258

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000006c 	.word	0x2000006c
 800020c:	08002258 	.word	0x08002258

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	; 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__aeabi_d2f>:
 8000a4c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a50:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000a54:	bf24      	itt	cs
 8000a56:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000a5a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000a5e:	d90d      	bls.n	8000a7c <__aeabi_d2f+0x30>
 8000a60:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000a64:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a68:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a6c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000a70:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a74:	bf08      	it	eq
 8000a76:	f020 0001 	biceq.w	r0, r0, #1
 8000a7a:	4770      	bx	lr
 8000a7c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000a80:	d121      	bne.n	8000ac6 <__aeabi_d2f+0x7a>
 8000a82:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000a86:	bfbc      	itt	lt
 8000a88:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000a8c:	4770      	bxlt	lr
 8000a8e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a92:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000a96:	f1c2 0218 	rsb	r2, r2, #24
 8000a9a:	f1c2 0c20 	rsb	ip, r2, #32
 8000a9e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000aa2:	fa20 f002 	lsr.w	r0, r0, r2
 8000aa6:	bf18      	it	ne
 8000aa8:	f040 0001 	orrne.w	r0, r0, #1
 8000aac:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ab0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000ab4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000ab8:	ea40 000c 	orr.w	r0, r0, ip
 8000abc:	fa23 f302 	lsr.w	r3, r3, r2
 8000ac0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ac4:	e7cc      	b.n	8000a60 <__aeabi_d2f+0x14>
 8000ac6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000aca:	d107      	bne.n	8000adc <__aeabi_d2f+0x90>
 8000acc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000ad0:	bf1e      	ittt	ne
 8000ad2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000ad6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000ada:	4770      	bxne	lr
 8000adc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000ae0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ae4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ae8:	4770      	bx	lr
 8000aea:	bf00      	nop

08000aec <trobleshoot>:
#include "main.h"
#include<stdio.h>
#include<stdint.h>


void trobleshoot(){
 8000aec:	b480      	push	{r7}
 8000aee:	b089      	sub	sp, #36	; 0x24
 8000af0:	af00      	add	r7, sp, #0
	uint32_t *rcc = (uint32_t*) 0x40023800;
 8000af2:	4b20      	ldr	r3, [pc, #128]	; (8000b74 <trobleshoot+0x88>)
 8000af4:	61fb      	str	r3, [r7, #28]
	uint32_t *rcc1 = (uint32_t*) 0x40023830;
 8000af6:	4b20      	ldr	r3, [pc, #128]	; (8000b78 <trobleshoot+0x8c>)
 8000af8:	61bb      	str	r3, [r7, #24]
	uint32_t *rcc2 = (uint32_t*) 0x40023840;
 8000afa:	4b20      	ldr	r3, [pc, #128]	; (8000b7c <trobleshoot+0x90>)
 8000afc:	617b      	str	r3, [r7, #20]

	*rcc1 |= 1<<1;
 8000afe:	69bb      	ldr	r3, [r7, #24]
 8000b00:	681b      	ldr	r3, [r3, #0]
 8000b02:	f043 0202 	orr.w	r2, r3, #2
 8000b06:	69bb      	ldr	r3, [r7, #24]
 8000b08:	601a      	str	r2, [r3, #0]
	*rcc2 |= 1<<21;
 8000b0a:	697b      	ldr	r3, [r7, #20]
 8000b0c:	681b      	ldr	r3, [r3, #0]
 8000b0e:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8000b12:	697b      	ldr	r3, [r7, #20]
 8000b14:	601a      	str	r2, [r3, #0]

	uint32_t *p= (uint32_t*) 0x40020400;
 8000b16:	4b1a      	ldr	r3, [pc, #104]	; (8000b80 <trobleshoot+0x94>)
 8000b18:	613b      	str	r3, [r7, #16]
	uint32_t *p1= (uint32_t*) 0x40020404;
 8000b1a:	4b1a      	ldr	r3, [pc, #104]	; (8000b84 <trobleshoot+0x98>)
 8000b1c:	60fb      	str	r3, [r7, #12]
	uint32_t *p2= (uint32_t*) 0x4002040c;
 8000b1e:	4b1a      	ldr	r3, [pc, #104]	; (8000b88 <trobleshoot+0x9c>)
 8000b20:	60bb      	str	r3, [r7, #8]
	uint32_t *p22= (uint32_t*) 0x40020408;
 8000b22:	4b1a      	ldr	r3, [pc, #104]	; (8000b8c <trobleshoot+0xa0>)
 8000b24:	607b      	str	r3, [r7, #4]
	uint32_t *p3= (uint32_t*) 0x40020424;
 8000b26:	4b1a      	ldr	r3, [pc, #104]	; (8000b90 <trobleshoot+0xa4>)
 8000b28:	603b      	str	r3, [r7, #0]
	*p |=  (2<<16) | (2<<18);
 8000b2a:	693b      	ldr	r3, [r7, #16]
 8000b2c:	681b      	ldr	r3, [r3, #0]
 8000b2e:	f443 2220 	orr.w	r2, r3, #655360	; 0xa0000
 8000b32:	693b      	ldr	r3, [r7, #16]
 8000b34:	601a      	str	r2, [r3, #0]
	*p1 |= (1<<8) | (1<<9);
 8000b36:	68fb      	ldr	r3, [r7, #12]
 8000b38:	681b      	ldr	r3, [r3, #0]
 8000b3a:	f443 7240 	orr.w	r2, r3, #768	; 0x300
 8000b3e:	68fb      	ldr	r3, [r7, #12]
 8000b40:	601a      	str	r2, [r3, #0]
	*p2 |= (1<<16) | (1<<18);
 8000b42:	68bb      	ldr	r3, [r7, #8]
 8000b44:	681b      	ldr	r3, [r3, #0]
 8000b46:	f443 22a0 	orr.w	r2, r3, #327680	; 0x50000
 8000b4a:	68bb      	ldr	r3, [r7, #8]
 8000b4c:	601a      	str	r2, [r3, #0]
	*p22 |= (3<<16) | (3<<18);
 8000b4e:	687b      	ldr	r3, [r7, #4]
 8000b50:	681b      	ldr	r3, [r3, #0]
 8000b52:	f443 2270 	orr.w	r2, r3, #983040	; 0xf0000
 8000b56:	687b      	ldr	r3, [r7, #4]
 8000b58:	601a      	str	r2, [r3, #0]

	*p3 |= (4<<0) | (4<<4);
 8000b5a:	683b      	ldr	r3, [r7, #0]
 8000b5c:	681b      	ldr	r3, [r3, #0]
 8000b5e:	f043 0244 	orr.w	r2, r3, #68	; 0x44
 8000b62:	683b      	ldr	r3, [r7, #0]
 8000b64:	601a      	str	r2, [r3, #0]
}
 8000b66:	bf00      	nop
 8000b68:	3724      	adds	r7, #36	; 0x24
 8000b6a:	46bd      	mov	sp, r7
 8000b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b70:	4770      	bx	lr
 8000b72:	bf00      	nop
 8000b74:	40023800 	.word	0x40023800
 8000b78:	40023830 	.word	0x40023830
 8000b7c:	40023840 	.word	0x40023840
 8000b80:	40020400 	.word	0x40020400
 8000b84:	40020404 	.word	0x40020404
 8000b88:	4002040c 	.word	0x4002040c
 8000b8c:	40020408 	.word	0x40020408
 8000b90:	40020424 	.word	0x40020424

08000b94 <init>:
			uint32_t I2C_TRISE;
		}i2c_baseaddr;

#define i2c_base  ((i2c_baseaddr*)0x40005400)

void init(uint32_t addr){
 8000b94:	b480      	push	{r7}
 8000b96:	b085      	sub	sp, #20
 8000b98:	af00      	add	r7, sp, #0
 8000b9a:	6078      	str	r0, [r7, #4]




	i2c_base->I2C_CR1 |= 1<<15;
 8000b9c:	4b17      	ldr	r3, [pc, #92]	; (8000bfc <init+0x68>)
 8000b9e:	681b      	ldr	r3, [r3, #0]
 8000ba0:	4a16      	ldr	r2, [pc, #88]	; (8000bfc <init+0x68>)
 8000ba2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000ba6:	6013      	str	r3, [r2, #0]
		i2c_base->I2C_CR1 &= ~(1<<15);
 8000ba8:	4b14      	ldr	r3, [pc, #80]	; (8000bfc <init+0x68>)
 8000baa:	681b      	ldr	r3, [r3, #0]
 8000bac:	4a13      	ldr	r2, [pc, #76]	; (8000bfc <init+0x68>)
 8000bae:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000bb2:	6013      	str	r3, [r2, #0]


	i2c_base->I2C_CR2 = 0x08;
 8000bb4:	4b11      	ldr	r3, [pc, #68]	; (8000bfc <init+0x68>)
 8000bb6:	2208      	movs	r2, #8
 8000bb8:	605a      	str	r2, [r3, #4]

	uint16_t ccrvalue= 0xA0;
 8000bba:	23a0      	movs	r3, #160	; 0xa0
 8000bbc:	81fb      	strh	r3, [r7, #14]

	i2c_base->I2C_OAR1 = addr<<1;
 8000bbe:	4a0f      	ldr	r2, [pc, #60]	; (8000bfc <init+0x68>)
 8000bc0:	687b      	ldr	r3, [r7, #4]
 8000bc2:	005b      	lsls	r3, r3, #1
 8000bc4:	6093      	str	r3, [r2, #8]
	i2c_base->I2C_OAR1 &= ~(1);
 8000bc6:	4b0d      	ldr	r3, [pc, #52]	; (8000bfc <init+0x68>)
 8000bc8:	689b      	ldr	r3, [r3, #8]
 8000bca:	4a0c      	ldr	r2, [pc, #48]	; (8000bfc <init+0x68>)
 8000bcc:	f023 0301 	bic.w	r3, r3, #1
 8000bd0:	6093      	str	r3, [r2, #8]
	i2c_base->I2C_OAR1 = 1<<14;
 8000bd2:	4b0a      	ldr	r3, [pc, #40]	; (8000bfc <init+0x68>)
 8000bd4:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000bd8:	609a      	str	r2, [r3, #8]
	i2c_base->I2C_CCR = 1<<15;
 8000bda:	4b08      	ldr	r3, [pc, #32]	; (8000bfc <init+0x68>)
 8000bdc:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8000be0:	61da      	str	r2, [r3, #28]
	i2c_base->I2C_CCR = 0x1b;
 8000be2:	4b06      	ldr	r3, [pc, #24]	; (8000bfc <init+0x68>)
 8000be4:	221b      	movs	r2, #27
 8000be6:	61da      	str	r2, [r3, #28]
	i2c_base->I2C_TRISE = 8+1;
 8000be8:	4b04      	ldr	r3, [pc, #16]	; (8000bfc <init+0x68>)
 8000bea:	2209      	movs	r2, #9
 8000bec:	621a      	str	r2, [r3, #32]

}
 8000bee:	bf00      	nop
 8000bf0:	3714      	adds	r7, #20
 8000bf2:	46bd      	mov	sp, r7
 8000bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bf8:	4770      	bx	lr
 8000bfa:	bf00      	nop
 8000bfc:	40005400 	.word	0x40005400

08000c00 <ack>:
void ack(){
 8000c00:	b480      	push	{r7}
 8000c02:	af00      	add	r7, sp, #0

	i2c_base->I2C_CR1 |= 1<<10;
 8000c04:	4b05      	ldr	r3, [pc, #20]	; (8000c1c <ack+0x1c>)
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	4a04      	ldr	r2, [pc, #16]	; (8000c1c <ack+0x1c>)
 8000c0a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000c0e:	6013      	str	r3, [r2, #0]
}
 8000c10:	bf00      	nop
 8000c12:	46bd      	mov	sp, r7
 8000c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c18:	4770      	bx	lr
 8000c1a:	bf00      	nop
 8000c1c:	40005400 	.word	0x40005400

08000c20 <pe_enable>:
void pe_enable(){
 8000c20:	b480      	push	{r7}
 8000c22:	af00      	add	r7, sp, #0

	i2c_base->I2C_CR1 |= 1<<0;
 8000c24:	4b05      	ldr	r3, [pc, #20]	; (8000c3c <pe_enable+0x1c>)
 8000c26:	681b      	ldr	r3, [r3, #0]
 8000c28:	4a04      	ldr	r2, [pc, #16]	; (8000c3c <pe_enable+0x1c>)
 8000c2a:	f043 0301 	orr.w	r3, r3, #1
 8000c2e:	6013      	str	r3, [r2, #0]

}
 8000c30:	bf00      	nop
 8000c32:	46bd      	mov	sp, r7
 8000c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c38:	4770      	bx	lr
 8000c3a:	bf00      	nop
 8000c3c:	40005400 	.word	0x40005400

08000c40 <start>:
void start(){
 8000c40:	b480      	push	{r7}
 8000c42:	af00      	add	r7, sp, #0

	i2c_base->I2C_CR1 |= 1<<8;
 8000c44:	4b09      	ldr	r3, [pc, #36]	; (8000c6c <start+0x2c>)
 8000c46:	681b      	ldr	r3, [r3, #0]
 8000c48:	4a08      	ldr	r2, [pc, #32]	; (8000c6c <start+0x2c>)
 8000c4a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000c4e:	6013      	str	r3, [r2, #0]
   //  i2c_base->I2C_SR1 = 1<<0;
	while (!(i2c_base->I2C_SR1 & (1<<0)));
 8000c50:	bf00      	nop
 8000c52:	4b06      	ldr	r3, [pc, #24]	; (8000c6c <start+0x2c>)
 8000c54:	695b      	ldr	r3, [r3, #20]
 8000c56:	f003 0301 	and.w	r3, r3, #1
 8000c5a:	2b00      	cmp	r3, #0
 8000c5c:	d0f9      	beq.n	8000c52 <start+0x12>
}
 8000c5e:	bf00      	nop
 8000c60:	bf00      	nop
 8000c62:	46bd      	mov	sp, r7
 8000c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c68:	4770      	bx	lr
 8000c6a:	bf00      	nop
 8000c6c:	40005400 	.word	0x40005400

08000c70 <addr>:
void addr(uint8_t slave){
 8000c70:	b480      	push	{r7}
 8000c72:	b085      	sub	sp, #20
 8000c74:	af00      	add	r7, sp, #0
 8000c76:	4603      	mov	r3, r0
 8000c78:	71fb      	strb	r3, [r7, #7]
	i2c_base->I2C_DR = slave<<1;
 8000c7a:	79fb      	ldrb	r3, [r7, #7]
 8000c7c:	005a      	lsls	r2, r3, #1
 8000c7e:	4b0a      	ldr	r3, [pc, #40]	; (8000ca8 <addr+0x38>)
 8000c80:	611a      	str	r2, [r3, #16]
	while (!(i2c_base->I2C_SR1 & 1<<1 ));
 8000c82:	bf00      	nop
 8000c84:	4b08      	ldr	r3, [pc, #32]	; (8000ca8 <addr+0x38>)
 8000c86:	695b      	ldr	r3, [r3, #20]
 8000c88:	f003 0302 	and.w	r3, r3, #2
 8000c8c:	2b00      	cmp	r3, #0
 8000c8e:	d0f9      	beq.n	8000c84 <addr+0x14>

		int dummyread = i2c_base->I2C_SR1;
 8000c90:	4b05      	ldr	r3, [pc, #20]	; (8000ca8 <addr+0x38>)
 8000c92:	695b      	ldr	r3, [r3, #20]
 8000c94:	60fb      	str	r3, [r7, #12]
		 dummyread = i2c_base->I2C_SR2;
 8000c96:	4b04      	ldr	r3, [pc, #16]	; (8000ca8 <addr+0x38>)
 8000c98:	699b      	ldr	r3, [r3, #24]
 8000c9a:	60fb      	str	r3, [r7, #12]
}
 8000c9c:	bf00      	nop
 8000c9e:	3714      	adds	r7, #20
 8000ca0:	46bd      	mov	sp, r7
 8000ca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ca6:	4770      	bx	lr
 8000ca8:	40005400 	.word	0x40005400

08000cac <recaddr>:
void recaddr(uint8_t slave,uint8_t *a,uint8_t len){
 8000cac:	b580      	push	{r7, lr}
 8000cae:	b084      	sub	sp, #16
 8000cb0:	af00      	add	r7, sp, #0
 8000cb2:	4603      	mov	r3, r0
 8000cb4:	6039      	str	r1, [r7, #0]
 8000cb6:	71fb      	strb	r3, [r7, #7]
 8000cb8:	4613      	mov	r3, r2
 8000cba:	71bb      	strb	r3, [r7, #6]
	ack();
 8000cbc:	f7ff ffa0 	bl	8000c00 <ack>

	i2c_base->I2C_DR = slave<<1|1;
 8000cc0:	79fb      	ldrb	r3, [r7, #7]
 8000cc2:	005b      	lsls	r3, r3, #1
 8000cc4:	f043 0201 	orr.w	r2, r3, #1
 8000cc8:	4b37      	ldr	r3, [pc, #220]	; (8000da8 <recaddr+0xfc>)
 8000cca:	611a      	str	r2, [r3, #16]

	//i2c_base->I2C_CR1 &= ~(1<<10);

	while (!(i2c_base->I2C_SR1 & 1<<1 ));
 8000ccc:	bf00      	nop
 8000cce:	4b36      	ldr	r3, [pc, #216]	; (8000da8 <recaddr+0xfc>)
 8000cd0:	695b      	ldr	r3, [r3, #20]
 8000cd2:	f003 0302 	and.w	r3, r3, #2
 8000cd6:	2b00      	cmp	r3, #0
 8000cd8:	d0f9      	beq.n	8000cce <recaddr+0x22>
	int dummyread = i2c_base->I2C_SR1;
 8000cda:	4b33      	ldr	r3, [pc, #204]	; (8000da8 <recaddr+0xfc>)
 8000cdc:	695b      	ldr	r3, [r3, #20]
 8000cde:	60bb      	str	r3, [r7, #8]
	 dummyread = i2c_base->I2C_SR2;
 8000ce0:	4b31      	ldr	r3, [pc, #196]	; (8000da8 <recaddr+0xfc>)
 8000ce2:	699b      	ldr	r3, [r3, #24]
 8000ce4:	60bb      	str	r3, [r7, #8]
	 if(len==1){
 8000ce6:	79bb      	ldrb	r3, [r7, #6]
 8000ce8:	2b01      	cmp	r3, #1
 8000cea:	d110      	bne.n	8000d0e <recaddr+0x62>
	 nack();
 8000cec:	f000 f89c 	bl	8000e28 <nack>
	 stop();
 8000cf0:	f000 f882 	bl	8000df8 <stop>
	 while (!(i2c_base->I2C_SR1 & 1<<6 ));
 8000cf4:	bf00      	nop
 8000cf6:	4b2c      	ldr	r3, [pc, #176]	; (8000da8 <recaddr+0xfc>)
 8000cf8:	695b      	ldr	r3, [r3, #20]
 8000cfa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000cfe:	2b00      	cmp	r3, #0
 8000d00:	d0f9      	beq.n	8000cf6 <recaddr+0x4a>

	 *a=i2c_base->I2C_DR;
 8000d02:	4b29      	ldr	r3, [pc, #164]	; (8000da8 <recaddr+0xfc>)
 8000d04:	691b      	ldr	r3, [r3, #16]
 8000d06:	b2da      	uxtb	r2, r3
 8000d08:	683b      	ldr	r3, [r7, #0]
 8000d0a:	701a      	strb	r2, [r3, #0]
		 temp++;
		 while (!(i2c_base->I2C_SR1 & 1<<6 ));
		 stop();
		 *(a+temp)=i2c_base->I2C_DR;

}}
 8000d0c:	e048      	b.n	8000da0 <recaddr+0xf4>
		 ack();
 8000d0e:	f7ff ff77 	bl	8000c00 <ack>
		 int temp=0;
 8000d12:	2300      	movs	r3, #0
 8000d14:	60fb      	str	r3, [r7, #12]
		 while(len>3){
 8000d16:	e013      	b.n	8000d40 <recaddr+0x94>
			 while (!(i2c_base->I2C_SR1 & 1<<6 ));
 8000d18:	bf00      	nop
 8000d1a:	4b23      	ldr	r3, [pc, #140]	; (8000da8 <recaddr+0xfc>)
 8000d1c:	695b      	ldr	r3, [r3, #20]
 8000d1e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000d22:	2b00      	cmp	r3, #0
 8000d24:	d0f9      	beq.n	8000d1a <recaddr+0x6e>
				 *(a+temp)=i2c_base->I2C_DR;
 8000d26:	4b20      	ldr	r3, [pc, #128]	; (8000da8 <recaddr+0xfc>)
 8000d28:	6919      	ldr	r1, [r3, #16]
 8000d2a:	68fb      	ldr	r3, [r7, #12]
 8000d2c:	683a      	ldr	r2, [r7, #0]
 8000d2e:	4413      	add	r3, r2
 8000d30:	b2ca      	uxtb	r2, r1
 8000d32:	701a      	strb	r2, [r3, #0]
				 len--;
 8000d34:	79bb      	ldrb	r3, [r7, #6]
 8000d36:	3b01      	subs	r3, #1
 8000d38:	71bb      	strb	r3, [r7, #6]
				 temp++;
 8000d3a:	68fb      	ldr	r3, [r7, #12]
 8000d3c:	3301      	adds	r3, #1
 8000d3e:	60fb      	str	r3, [r7, #12]
		 while(len>3){
 8000d40:	79bb      	ldrb	r3, [r7, #6]
 8000d42:	2b03      	cmp	r3, #3
 8000d44:	d8e8      	bhi.n	8000d18 <recaddr+0x6c>
		 while(!(i2c_base->I2C_SR1 & 1<<2 ));
 8000d46:	bf00      	nop
 8000d48:	4b17      	ldr	r3, [pc, #92]	; (8000da8 <recaddr+0xfc>)
 8000d4a:	695b      	ldr	r3, [r3, #20]
 8000d4c:	f003 0304 	and.w	r3, r3, #4
 8000d50:	2b00      	cmp	r3, #0
 8000d52:	d0f9      	beq.n	8000d48 <recaddr+0x9c>
		 *(a+temp)=i2c_base->I2C_DR;
 8000d54:	4b14      	ldr	r3, [pc, #80]	; (8000da8 <recaddr+0xfc>)
 8000d56:	6919      	ldr	r1, [r3, #16]
 8000d58:	68fb      	ldr	r3, [r7, #12]
 8000d5a:	683a      	ldr	r2, [r7, #0]
 8000d5c:	4413      	add	r3, r2
 8000d5e:	b2ca      	uxtb	r2, r1
 8000d60:	701a      	strb	r2, [r3, #0]
		 temp++;
 8000d62:	68fb      	ldr	r3, [r7, #12]
 8000d64:	3301      	adds	r3, #1
 8000d66:	60fb      	str	r3, [r7, #12]
		 nack();
 8000d68:	f000 f85e 	bl	8000e28 <nack>
		 *(a+temp)=i2c_base->I2C_DR;
 8000d6c:	4b0e      	ldr	r3, [pc, #56]	; (8000da8 <recaddr+0xfc>)
 8000d6e:	6919      	ldr	r1, [r3, #16]
 8000d70:	68fb      	ldr	r3, [r7, #12]
 8000d72:	683a      	ldr	r2, [r7, #0]
 8000d74:	4413      	add	r3, r2
 8000d76:	b2ca      	uxtb	r2, r1
 8000d78:	701a      	strb	r2, [r3, #0]
		 temp++;
 8000d7a:	68fb      	ldr	r3, [r7, #12]
 8000d7c:	3301      	adds	r3, #1
 8000d7e:	60fb      	str	r3, [r7, #12]
		 while (!(i2c_base->I2C_SR1 & 1<<6 ));
 8000d80:	bf00      	nop
 8000d82:	4b09      	ldr	r3, [pc, #36]	; (8000da8 <recaddr+0xfc>)
 8000d84:	695b      	ldr	r3, [r3, #20]
 8000d86:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d0f9      	beq.n	8000d82 <recaddr+0xd6>
		 stop();
 8000d8e:	f000 f833 	bl	8000df8 <stop>
		 *(a+temp)=i2c_base->I2C_DR;
 8000d92:	4b05      	ldr	r3, [pc, #20]	; (8000da8 <recaddr+0xfc>)
 8000d94:	6919      	ldr	r1, [r3, #16]
 8000d96:	68fb      	ldr	r3, [r7, #12]
 8000d98:	683a      	ldr	r2, [r7, #0]
 8000d9a:	4413      	add	r3, r2
 8000d9c:	b2ca      	uxtb	r2, r1
 8000d9e:	701a      	strb	r2, [r3, #0]
}}
 8000da0:	bf00      	nop
 8000da2:	3710      	adds	r7, #16
 8000da4:	46bd      	mov	sp, r7
 8000da6:	bd80      	pop	{r7, pc}
 8000da8:	40005400 	.word	0x40005400

08000dac <write>:

void write(uint8_t *data,int len){
 8000dac:	b480      	push	{r7}
 8000dae:	b083      	sub	sp, #12
 8000db0:	af00      	add	r7, sp, #0
 8000db2:	6078      	str	r0, [r7, #4]
 8000db4:	6039      	str	r1, [r7, #0]

	while(len>0){
 8000db6:	e013      	b.n	8000de0 <write+0x34>
		i2c_base->I2C_DR = *data;
 8000db8:	687b      	ldr	r3, [r7, #4]
 8000dba:	781a      	ldrb	r2, [r3, #0]
 8000dbc:	4b0d      	ldr	r3, [pc, #52]	; (8000df4 <write+0x48>)
 8000dbe:	611a      	str	r2, [r3, #16]
		while (!(i2c_base->I2C_SR1 &= 1<<7));
 8000dc0:	bf00      	nop
 8000dc2:	4b0c      	ldr	r3, [pc, #48]	; (8000df4 <write+0x48>)
 8000dc4:	695a      	ldr	r2, [r3, #20]
 8000dc6:	4b0b      	ldr	r3, [pc, #44]	; (8000df4 <write+0x48>)
 8000dc8:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8000dcc:	615a      	str	r2, [r3, #20]
 8000dce:	695b      	ldr	r3, [r3, #20]
 8000dd0:	2b00      	cmp	r3, #0
 8000dd2:	d0f6      	beq.n	8000dc2 <write+0x16>
     data++;
 8000dd4:	687b      	ldr	r3, [r7, #4]
 8000dd6:	3301      	adds	r3, #1
 8000dd8:	607b      	str	r3, [r7, #4]
		len--;
 8000dda:	683b      	ldr	r3, [r7, #0]
 8000ddc:	3b01      	subs	r3, #1
 8000dde:	603b      	str	r3, [r7, #0]
	while(len>0){
 8000de0:	683b      	ldr	r3, [r7, #0]
 8000de2:	2b00      	cmp	r3, #0
 8000de4:	dce8      	bgt.n	8000db8 <write+0xc>
	}
	}
 8000de6:	bf00      	nop
 8000de8:	bf00      	nop
 8000dea:	370c      	adds	r7, #12
 8000dec:	46bd      	mov	sp, r7
 8000dee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000df2:	4770      	bx	lr
 8000df4:	40005400 	.word	0x40005400

08000df8 <stop>:
void stop(){
 8000df8:	b480      	push	{r7}
 8000dfa:	af00      	add	r7, sp, #0


	while (!(i2c_base->I2C_SR1 &= 132));
 8000dfc:	bf00      	nop
 8000dfe:	4b09      	ldr	r3, [pc, #36]	; (8000e24 <stop+0x2c>)
 8000e00:	695a      	ldr	r2, [r3, #20]
 8000e02:	4b08      	ldr	r3, [pc, #32]	; (8000e24 <stop+0x2c>)
 8000e04:	f002 0284 	and.w	r2, r2, #132	; 0x84
 8000e08:	615a      	str	r2, [r3, #20]
 8000e0a:	695b      	ldr	r3, [r3, #20]
 8000e0c:	2b00      	cmp	r3, #0
 8000e0e:	d0f6      	beq.n	8000dfe <stop+0x6>
			i2c_base->I2C_CR1 = 1<<9;
 8000e10:	4b04      	ldr	r3, [pc, #16]	; (8000e24 <stop+0x2c>)
 8000e12:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000e16:	601a      	str	r2, [r3, #0]
	}
 8000e18:	bf00      	nop
 8000e1a:	46bd      	mov	sp, r7
 8000e1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e20:	4770      	bx	lr
 8000e22:	bf00      	nop
 8000e24:	40005400 	.word	0x40005400

08000e28 <nack>:


void nack(){
 8000e28:	b480      	push	{r7}
 8000e2a:	af00      	add	r7, sp, #0
	i2c_base->I2C_CR1 &= ~(1<<10);
 8000e2c:	4b05      	ldr	r3, [pc, #20]	; (8000e44 <nack+0x1c>)
 8000e2e:	681b      	ldr	r3, [r3, #0]
 8000e30:	4a04      	ldr	r2, [pc, #16]	; (8000e44 <nack+0x1c>)
 8000e32:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000e36:	6013      	str	r3, [r2, #0]
}
 8000e38:	bf00      	nop
 8000e3a:	46bd      	mov	sp, r7
 8000e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e40:	4770      	bx	lr
 8000e42:	bf00      	nop
 8000e44:	40005400 	.word	0x40005400

08000e48 <main>:



int main( )
{
 8000e48:	b590      	push	{r4, r7, lr}
 8000e4a:	b08d      	sub	sp, #52	; 0x34
 8000e4c:	af00      	add	r7, sp, #0
	uint16_t x;
		uint16_t y;
		uint16_t z;
		char a[] = "kannan kck 3";
 8000e4e:	4b54      	ldr	r3, [pc, #336]	; (8000fa0 <main+0x158>)
 8000e50:	f107 040c 	add.w	r4, r7, #12
 8000e54:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000e56:	c407      	stmia	r4!, {r0, r1, r2}
 8000e58:	7023      	strb	r3, [r4, #0]
	int  k = 0x51;
 8000e5a:	2351      	movs	r3, #81	; 0x51
 8000e5c:	62fb      	str	r3, [r7, #44]	; 0x2c
	uint8_t c = 0x6b;
 8000e5e:	236b      	movs	r3, #107	; 0x6b
 8000e60:	72fb      	strb	r3, [r7, #11]
	uint8_t r=0;
 8000e62:	2300      	movs	r3, #0
 8000e64:	72bb      	strb	r3, [r7, #10]

		uint8_t c1 = 0x6b;
 8000e66:	236b      	movs	r3, #107	; 0x6b
 8000e68:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
		uint8_t kck;
		trobleshoot();
 8000e6c:	f7ff fe3e 	bl	8000aec <trobleshoot>
	//	pe_enable();
		init(0x62);
 8000e70:	2062      	movs	r0, #98	; 0x62
 8000e72:	f7ff fe8f 	bl	8000b94 <init>
	printf("kck\n");
 8000e76:	484b      	ldr	r0, [pc, #300]	; (8000fa4 <main+0x15c>)
 8000e78:	f000 fa70 	bl	800135c <puts>
	uint8_t p=0x3b;
 8000e7c:	233b      	movs	r3, #59	; 0x3b
 8000e7e:	727b      	strb	r3, [r7, #9]
	uint8_t p1=0xff;
 8000e80:	23ff      	movs	r3, #255	; 0xff
 8000e82:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
	//i2c_base->I2C_CR2 = 1<<9;
	uint8_t h=0x1c;
 8000e86:	231c      	movs	r3, #28
 8000e88:	723b      	strb	r3, [r7, #8]
	uint8_t j[6];
	//printf("%d\n",h);

		// start();
		// I2C_Read(0x68, &r, 1);
	pe_enable();
 8000e8a:	f7ff fec9 	bl	8000c20 <pe_enable>
	ack();
 8000e8e:	f7ff feb7 	bl	8000c00 <ack>
	start();
 8000e92:	f7ff fed5 	bl	8000c40 <start>

			addr(0x68);
 8000e96:	2068      	movs	r0, #104	; 0x68
 8000e98:	f7ff feea 	bl	8000c70 <addr>
				write(&c,1);
 8000e9c:	f107 030b 	add.w	r3, r7, #11
 8000ea0:	2101      	movs	r1, #1
 8000ea2:	4618      	mov	r0, r3
 8000ea4:	f7ff ff82 	bl	8000dac <write>
				//write(&p1,1);
				write(&r,1);
 8000ea8:	f107 030a 	add.w	r3, r7, #10
 8000eac:	2101      	movs	r1, #1
 8000eae:	4618      	mov	r0, r3
 8000eb0:	f7ff ff7c 	bl	8000dac <write>
			stop();
 8000eb4:	f7ff ffa0 	bl	8000df8 <stop>
			pe_enable();
 8000eb8:	f7ff feb2 	bl	8000c20 <pe_enable>
						start();
 8000ebc:	f7ff fec0 	bl	8000c40 <start>
								addr(0x68);
 8000ec0:	2068      	movs	r0, #104	; 0x68
 8000ec2:	f7ff fed5 	bl	8000c70 <addr>
					write(&h,1);
 8000ec6:	f107 0308 	add.w	r3, r7, #8
 8000eca:	2101      	movs	r1, #1
 8000ecc:	4618      	mov	r0, r3
 8000ece:	f7ff ff6d 	bl	8000dac <write>
					write(&r,1);
 8000ed2:	f107 030a 	add.w	r3, r7, #10
 8000ed6:	2101      	movs	r1, #1
 8000ed8:	4618      	mov	r0, r3
 8000eda:	f7ff ff67 	bl	8000dac <write>
				stop();
 8000ede:	f7ff ff8b 	bl	8000df8 <stop>
				while(1){
			pe_enable();
 8000ee2:	f7ff fe9d 	bl	8000c20 <pe_enable>
			ack();
 8000ee6:	f7ff fe8b 	bl	8000c00 <ack>
			start();
 8000eea:	f7ff fea9 	bl	8000c40 <start>
					addr(0x68);
 8000eee:	2068      	movs	r0, #104	; 0x68
 8000ef0:	f7ff febe 	bl	8000c70 <addr>
					write(&p, 1);
 8000ef4:	f107 0309 	add.w	r3, r7, #9
 8000ef8:	2101      	movs	r1, #1
 8000efa:	4618      	mov	r0, r3
 8000efc:	f7ff ff56 	bl	8000dac <write>
	stop();
 8000f00:	f7ff ff7a 	bl	8000df8 <stop>
	pe_enable();
 8000f04:	f7ff fe8c 	bl	8000c20 <pe_enable>
	start();
 8000f08:	f7ff fe9a 	bl	8000c40 <start>
	        recaddr(0x68,&j,6);
 8000f0c:	463b      	mov	r3, r7
 8000f0e:	2206      	movs	r2, #6
 8000f10:	4619      	mov	r1, r3
 8000f12:	2068      	movs	r0, #104	; 0x68
 8000f14:	f7ff feca 	bl	8000cac <recaddr>
	        x= (uint16_t) (j[0]<<8|j[1]);
 8000f18:	783b      	ldrb	r3, [r7, #0]
 8000f1a:	021b      	lsls	r3, r3, #8
 8000f1c:	b21a      	sxth	r2, r3
 8000f1e:	787b      	ldrb	r3, [r7, #1]
 8000f20:	b21b      	sxth	r3, r3
 8000f22:	4313      	orrs	r3, r2
 8000f24:	b21b      	sxth	r3, r3
 8000f26:	853b      	strh	r3, [r7, #40]	; 0x28
	        float gx = x/16384.0;
 8000f28:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8000f2a:	4618      	mov	r0, r3
 8000f2c:	f7ff fb12 	bl	8000554 <__aeabi_i2d>
 8000f30:	f04f 0200 	mov.w	r2, #0
 8000f34:	4b1c      	ldr	r3, [pc, #112]	; (8000fa8 <main+0x160>)
 8000f36:	f7ff fca1 	bl	800087c <__aeabi_ddiv>
 8000f3a:	4602      	mov	r2, r0
 8000f3c:	460b      	mov	r3, r1
 8000f3e:	4610      	mov	r0, r2
 8000f40:	4619      	mov	r1, r3
 8000f42:	f7ff fd83 	bl	8000a4c <__aeabi_d2f>
 8000f46:	4603      	mov	r3, r0
 8000f48:	627b      	str	r3, [r7, #36]	; 0x24
	        y= j[2]<<8|j[3];
 8000f4a:	78bb      	ldrb	r3, [r7, #2]
 8000f4c:	021b      	lsls	r3, r3, #8
 8000f4e:	b21a      	sxth	r2, r3
 8000f50:	78fb      	ldrb	r3, [r7, #3]
 8000f52:	b21b      	sxth	r3, r3
 8000f54:	4313      	orrs	r3, r2
 8000f56:	b21b      	sxth	r3, r3
 8000f58:	847b      	strh	r3, [r7, #34]	; 0x22
	        float gy = y/16384.0;
 8000f5a:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8000f5c:	4618      	mov	r0, r3
 8000f5e:	f7ff faf9 	bl	8000554 <__aeabi_i2d>
 8000f62:	f04f 0200 	mov.w	r2, #0
 8000f66:	4b10      	ldr	r3, [pc, #64]	; (8000fa8 <main+0x160>)
 8000f68:	f7ff fc88 	bl	800087c <__aeabi_ddiv>
 8000f6c:	4602      	mov	r2, r0
 8000f6e:	460b      	mov	r3, r1
 8000f70:	4610      	mov	r0, r2
 8000f72:	4619      	mov	r1, r3
 8000f74:	f7ff fd6a 	bl	8000a4c <__aeabi_d2f>
 8000f78:	4603      	mov	r3, r0
 8000f7a:	61fb      	str	r3, [r7, #28]
	        z=j[4]<<8|j[5];
 8000f7c:	793b      	ldrb	r3, [r7, #4]
 8000f7e:	021b      	lsls	r3, r3, #8
 8000f80:	b21a      	sxth	r2, r3
 8000f82:	797b      	ldrb	r3, [r7, #5]
 8000f84:	b21b      	sxth	r3, r3
 8000f86:	4313      	orrs	r3, r2
 8000f88:	b21b      	sxth	r3, r3
 8000f8a:	837b      	strh	r3, [r7, #26]
	        printf("x=%d\n",gx);
 8000f8c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000f8e:	f7ff faf3 	bl	8000578 <__aeabi_f2d>
 8000f92:	4602      	mov	r2, r0
 8000f94:	460b      	mov	r3, r1
 8000f96:	4805      	ldr	r0, [pc, #20]	; (8000fac <main+0x164>)
 8000f98:	f000 f95a 	bl	8001250 <iprintf>
				while(1){
 8000f9c:	e7a1      	b.n	8000ee2 <main+0x9a>
 8000f9e:	bf00      	nop
 8000fa0:	0800227c 	.word	0x0800227c
 8000fa4:	08002270 	.word	0x08002270
 8000fa8:	40d00000 	.word	0x40d00000
 8000fac:	08002274 	.word	0x08002274

08000fb0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000fb0:	b480      	push	{r7}
 8000fb2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000fb4:	e7fe      	b.n	8000fb4 <NMI_Handler+0x4>

08000fb6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000fb6:	b480      	push	{r7}
 8000fb8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000fba:	e7fe      	b.n	8000fba <HardFault_Handler+0x4>

08000fbc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000fbc:	b480      	push	{r7}
 8000fbe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000fc0:	e7fe      	b.n	8000fc0 <MemManage_Handler+0x4>

08000fc2 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000fc2:	b480      	push	{r7}
 8000fc4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000fc6:	e7fe      	b.n	8000fc6 <BusFault_Handler+0x4>

08000fc8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000fc8:	b480      	push	{r7}
 8000fca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000fcc:	e7fe      	b.n	8000fcc <UsageFault_Handler+0x4>

08000fce <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000fce:	b480      	push	{r7}
 8000fd0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000fd2:	bf00      	nop
 8000fd4:	46bd      	mov	sp, r7
 8000fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fda:	4770      	bx	lr

08000fdc <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000fdc:	b480      	push	{r7}
 8000fde:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000fe0:	bf00      	nop
 8000fe2:	46bd      	mov	sp, r7
 8000fe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fe8:	4770      	bx	lr

08000fea <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000fea:	b480      	push	{r7}
 8000fec:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000fee:	bf00      	nop
 8000ff0:	46bd      	mov	sp, r7
 8000ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ff6:	4770      	bx	lr

08000ff8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000ff8:	b580      	push	{r7, lr}
 8000ffa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000ffc:	f000 f8e2 	bl	80011c4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001000:	bf00      	nop
 8001002:	bd80      	pop	{r7, pc}

08001004 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001004:	b580      	push	{r7, lr}
 8001006:	b086      	sub	sp, #24
 8001008:	af00      	add	r7, sp, #0
 800100a:	60f8      	str	r0, [r7, #12]
 800100c:	60b9      	str	r1, [r7, #8]
 800100e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001010:	2300      	movs	r3, #0
 8001012:	617b      	str	r3, [r7, #20]
 8001014:	e00a      	b.n	800102c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8001016:	f3af 8000 	nop.w
 800101a:	4601      	mov	r1, r0
 800101c:	68bb      	ldr	r3, [r7, #8]
 800101e:	1c5a      	adds	r2, r3, #1
 8001020:	60ba      	str	r2, [r7, #8]
 8001022:	b2ca      	uxtb	r2, r1
 8001024:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001026:	697b      	ldr	r3, [r7, #20]
 8001028:	3301      	adds	r3, #1
 800102a:	617b      	str	r3, [r7, #20]
 800102c:	697a      	ldr	r2, [r7, #20]
 800102e:	687b      	ldr	r3, [r7, #4]
 8001030:	429a      	cmp	r2, r3
 8001032:	dbf0      	blt.n	8001016 <_read+0x12>
	}

return len;
 8001034:	687b      	ldr	r3, [r7, #4]
}
 8001036:	4618      	mov	r0, r3
 8001038:	3718      	adds	r7, #24
 800103a:	46bd      	mov	sp, r7
 800103c:	bd80      	pop	{r7, pc}

0800103e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800103e:	b580      	push	{r7, lr}
 8001040:	b086      	sub	sp, #24
 8001042:	af00      	add	r7, sp, #0
 8001044:	60f8      	str	r0, [r7, #12]
 8001046:	60b9      	str	r1, [r7, #8]
 8001048:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800104a:	2300      	movs	r3, #0
 800104c:	617b      	str	r3, [r7, #20]
 800104e:	e009      	b.n	8001064 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8001050:	68bb      	ldr	r3, [r7, #8]
 8001052:	1c5a      	adds	r2, r3, #1
 8001054:	60ba      	str	r2, [r7, #8]
 8001056:	781b      	ldrb	r3, [r3, #0]
 8001058:	4618      	mov	r0, r3
 800105a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800105e:	697b      	ldr	r3, [r7, #20]
 8001060:	3301      	adds	r3, #1
 8001062:	617b      	str	r3, [r7, #20]
 8001064:	697a      	ldr	r2, [r7, #20]
 8001066:	687b      	ldr	r3, [r7, #4]
 8001068:	429a      	cmp	r2, r3
 800106a:	dbf1      	blt.n	8001050 <_write+0x12>
	}
	return len;
 800106c:	687b      	ldr	r3, [r7, #4]
}
 800106e:	4618      	mov	r0, r3
 8001070:	3718      	adds	r7, #24
 8001072:	46bd      	mov	sp, r7
 8001074:	bd80      	pop	{r7, pc}

08001076 <_close>:

int _close(int file)
{
 8001076:	b480      	push	{r7}
 8001078:	b083      	sub	sp, #12
 800107a:	af00      	add	r7, sp, #0
 800107c:	6078      	str	r0, [r7, #4]
	return -1;
 800107e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001082:	4618      	mov	r0, r3
 8001084:	370c      	adds	r7, #12
 8001086:	46bd      	mov	sp, r7
 8001088:	f85d 7b04 	ldr.w	r7, [sp], #4
 800108c:	4770      	bx	lr

0800108e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800108e:	b480      	push	{r7}
 8001090:	b083      	sub	sp, #12
 8001092:	af00      	add	r7, sp, #0
 8001094:	6078      	str	r0, [r7, #4]
 8001096:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8001098:	683b      	ldr	r3, [r7, #0]
 800109a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800109e:	605a      	str	r2, [r3, #4]
	return 0;
 80010a0:	2300      	movs	r3, #0
}
 80010a2:	4618      	mov	r0, r3
 80010a4:	370c      	adds	r7, #12
 80010a6:	46bd      	mov	sp, r7
 80010a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ac:	4770      	bx	lr

080010ae <_isatty>:

int _isatty(int file)
{
 80010ae:	b480      	push	{r7}
 80010b0:	b083      	sub	sp, #12
 80010b2:	af00      	add	r7, sp, #0
 80010b4:	6078      	str	r0, [r7, #4]
	return 1;
 80010b6:	2301      	movs	r3, #1
}
 80010b8:	4618      	mov	r0, r3
 80010ba:	370c      	adds	r7, #12
 80010bc:	46bd      	mov	sp, r7
 80010be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c2:	4770      	bx	lr

080010c4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80010c4:	b480      	push	{r7}
 80010c6:	b085      	sub	sp, #20
 80010c8:	af00      	add	r7, sp, #0
 80010ca:	60f8      	str	r0, [r7, #12]
 80010cc:	60b9      	str	r1, [r7, #8]
 80010ce:	607a      	str	r2, [r7, #4]
	return 0;
 80010d0:	2300      	movs	r3, #0
}
 80010d2:	4618      	mov	r0, r3
 80010d4:	3714      	adds	r7, #20
 80010d6:	46bd      	mov	sp, r7
 80010d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010dc:	4770      	bx	lr
	...

080010e0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80010e0:	b580      	push	{r7, lr}
 80010e2:	b086      	sub	sp, #24
 80010e4:	af00      	add	r7, sp, #0
 80010e6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80010e8:	4a14      	ldr	r2, [pc, #80]	; (800113c <_sbrk+0x5c>)
 80010ea:	4b15      	ldr	r3, [pc, #84]	; (8001140 <_sbrk+0x60>)
 80010ec:	1ad3      	subs	r3, r2, r3
 80010ee:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80010f0:	697b      	ldr	r3, [r7, #20]
 80010f2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80010f4:	4b13      	ldr	r3, [pc, #76]	; (8001144 <_sbrk+0x64>)
 80010f6:	681b      	ldr	r3, [r3, #0]
 80010f8:	2b00      	cmp	r3, #0
 80010fa:	d102      	bne.n	8001102 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80010fc:	4b11      	ldr	r3, [pc, #68]	; (8001144 <_sbrk+0x64>)
 80010fe:	4a12      	ldr	r2, [pc, #72]	; (8001148 <_sbrk+0x68>)
 8001100:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001102:	4b10      	ldr	r3, [pc, #64]	; (8001144 <_sbrk+0x64>)
 8001104:	681a      	ldr	r2, [r3, #0]
 8001106:	687b      	ldr	r3, [r7, #4]
 8001108:	4413      	add	r3, r2
 800110a:	693a      	ldr	r2, [r7, #16]
 800110c:	429a      	cmp	r2, r3
 800110e:	d207      	bcs.n	8001120 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001110:	f000 f86c 	bl	80011ec <__errno>
 8001114:	4603      	mov	r3, r0
 8001116:	220c      	movs	r2, #12
 8001118:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800111a:	f04f 33ff 	mov.w	r3, #4294967295
 800111e:	e009      	b.n	8001134 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001120:	4b08      	ldr	r3, [pc, #32]	; (8001144 <_sbrk+0x64>)
 8001122:	681b      	ldr	r3, [r3, #0]
 8001124:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001126:	4b07      	ldr	r3, [pc, #28]	; (8001144 <_sbrk+0x64>)
 8001128:	681a      	ldr	r2, [r3, #0]
 800112a:	687b      	ldr	r3, [r7, #4]
 800112c:	4413      	add	r3, r2
 800112e:	4a05      	ldr	r2, [pc, #20]	; (8001144 <_sbrk+0x64>)
 8001130:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001132:	68fb      	ldr	r3, [r7, #12]
}
 8001134:	4618      	mov	r0, r3
 8001136:	3718      	adds	r7, #24
 8001138:	46bd      	mov	sp, r7
 800113a:	bd80      	pop	{r7, pc}
 800113c:	20020000 	.word	0x20020000
 8001140:	00000400 	.word	0x00000400
 8001144:	20000084 	.word	0x20000084
 8001148:	200000a0 	.word	0x200000a0

0800114c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800114c:	b480      	push	{r7}
 800114e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001150:	4b06      	ldr	r3, [pc, #24]	; (800116c <SystemInit+0x20>)
 8001152:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001156:	4a05      	ldr	r2, [pc, #20]	; (800116c <SystemInit+0x20>)
 8001158:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800115c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001160:	bf00      	nop
 8001162:	46bd      	mov	sp, r7
 8001164:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001168:	4770      	bx	lr
 800116a:	bf00      	nop
 800116c:	e000ed00 	.word	0xe000ed00

08001170 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8001170:	f8df d034 	ldr.w	sp, [pc, #52]	; 80011a8 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001174:	480d      	ldr	r0, [pc, #52]	; (80011ac <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8001176:	490e      	ldr	r1, [pc, #56]	; (80011b0 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8001178:	4a0e      	ldr	r2, [pc, #56]	; (80011b4 <LoopFillZerobss+0x1e>)
  movs r3, #0
 800117a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800117c:	e002      	b.n	8001184 <LoopCopyDataInit>

0800117e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800117e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001180:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001182:	3304      	adds	r3, #4

08001184 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001184:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001186:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001188:	d3f9      	bcc.n	800117e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800118a:	4a0b      	ldr	r2, [pc, #44]	; (80011b8 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 800118c:	4c0b      	ldr	r4, [pc, #44]	; (80011bc <LoopFillZerobss+0x26>)
  movs r3, #0
 800118e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001190:	e001      	b.n	8001196 <LoopFillZerobss>

08001192 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001192:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001194:	3204      	adds	r2, #4

08001196 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001196:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001198:	d3fb      	bcc.n	8001192 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 800119a:	f7ff ffd7 	bl	800114c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800119e:	f000 f82b 	bl	80011f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80011a2:	f7ff fe51 	bl	8000e48 <main>
  bx  lr    
 80011a6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80011a8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80011ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80011b0:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 80011b4:	0800232c 	.word	0x0800232c
  ldr r2, =_sbss
 80011b8:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 80011bc:	2000009c 	.word	0x2000009c

080011c0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80011c0:	e7fe      	b.n	80011c0 <ADC_IRQHandler>
	...

080011c4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80011c4:	b480      	push	{r7}
 80011c6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80011c8:	4b06      	ldr	r3, [pc, #24]	; (80011e4 <HAL_IncTick+0x20>)
 80011ca:	781b      	ldrb	r3, [r3, #0]
 80011cc:	461a      	mov	r2, r3
 80011ce:	4b06      	ldr	r3, [pc, #24]	; (80011e8 <HAL_IncTick+0x24>)
 80011d0:	681b      	ldr	r3, [r3, #0]
 80011d2:	4413      	add	r3, r2
 80011d4:	4a04      	ldr	r2, [pc, #16]	; (80011e8 <HAL_IncTick+0x24>)
 80011d6:	6013      	str	r3, [r2, #0]
}
 80011d8:	bf00      	nop
 80011da:	46bd      	mov	sp, r7
 80011dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011e0:	4770      	bx	lr
 80011e2:	bf00      	nop
 80011e4:	20000000 	.word	0x20000000
 80011e8:	20000088 	.word	0x20000088

080011ec <__errno>:
 80011ec:	4b01      	ldr	r3, [pc, #4]	; (80011f4 <__errno+0x8>)
 80011ee:	6818      	ldr	r0, [r3, #0]
 80011f0:	4770      	bx	lr
 80011f2:	bf00      	nop
 80011f4:	20000004 	.word	0x20000004

080011f8 <__libc_init_array>:
 80011f8:	b570      	push	{r4, r5, r6, lr}
 80011fa:	4d0d      	ldr	r5, [pc, #52]	; (8001230 <__libc_init_array+0x38>)
 80011fc:	4c0d      	ldr	r4, [pc, #52]	; (8001234 <__libc_init_array+0x3c>)
 80011fe:	1b64      	subs	r4, r4, r5
 8001200:	10a4      	asrs	r4, r4, #2
 8001202:	2600      	movs	r6, #0
 8001204:	42a6      	cmp	r6, r4
 8001206:	d109      	bne.n	800121c <__libc_init_array+0x24>
 8001208:	4d0b      	ldr	r5, [pc, #44]	; (8001238 <__libc_init_array+0x40>)
 800120a:	4c0c      	ldr	r4, [pc, #48]	; (800123c <__libc_init_array+0x44>)
 800120c:	f001 f824 	bl	8002258 <_init>
 8001210:	1b64      	subs	r4, r4, r5
 8001212:	10a4      	asrs	r4, r4, #2
 8001214:	2600      	movs	r6, #0
 8001216:	42a6      	cmp	r6, r4
 8001218:	d105      	bne.n	8001226 <__libc_init_array+0x2e>
 800121a:	bd70      	pop	{r4, r5, r6, pc}
 800121c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001220:	4798      	blx	r3
 8001222:	3601      	adds	r6, #1
 8001224:	e7ee      	b.n	8001204 <__libc_init_array+0xc>
 8001226:	f855 3b04 	ldr.w	r3, [r5], #4
 800122a:	4798      	blx	r3
 800122c:	3601      	adds	r6, #1
 800122e:	e7f2      	b.n	8001216 <__libc_init_array+0x1e>
 8001230:	08002324 	.word	0x08002324
 8001234:	08002324 	.word	0x08002324
 8001238:	08002324 	.word	0x08002324
 800123c:	08002328 	.word	0x08002328

08001240 <memset>:
 8001240:	4402      	add	r2, r0
 8001242:	4603      	mov	r3, r0
 8001244:	4293      	cmp	r3, r2
 8001246:	d100      	bne.n	800124a <memset+0xa>
 8001248:	4770      	bx	lr
 800124a:	f803 1b01 	strb.w	r1, [r3], #1
 800124e:	e7f9      	b.n	8001244 <memset+0x4>

08001250 <iprintf>:
 8001250:	b40f      	push	{r0, r1, r2, r3}
 8001252:	4b0a      	ldr	r3, [pc, #40]	; (800127c <iprintf+0x2c>)
 8001254:	b513      	push	{r0, r1, r4, lr}
 8001256:	681c      	ldr	r4, [r3, #0]
 8001258:	b124      	cbz	r4, 8001264 <iprintf+0x14>
 800125a:	69a3      	ldr	r3, [r4, #24]
 800125c:	b913      	cbnz	r3, 8001264 <iprintf+0x14>
 800125e:	4620      	mov	r0, r4
 8001260:	f000 fa5e 	bl	8001720 <__sinit>
 8001264:	ab05      	add	r3, sp, #20
 8001266:	9a04      	ldr	r2, [sp, #16]
 8001268:	68a1      	ldr	r1, [r4, #8]
 800126a:	9301      	str	r3, [sp, #4]
 800126c:	4620      	mov	r0, r4
 800126e:	f000 fc67 	bl	8001b40 <_vfiprintf_r>
 8001272:	b002      	add	sp, #8
 8001274:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001278:	b004      	add	sp, #16
 800127a:	4770      	bx	lr
 800127c:	20000004 	.word	0x20000004

08001280 <_puts_r>:
 8001280:	b570      	push	{r4, r5, r6, lr}
 8001282:	460e      	mov	r6, r1
 8001284:	4605      	mov	r5, r0
 8001286:	b118      	cbz	r0, 8001290 <_puts_r+0x10>
 8001288:	6983      	ldr	r3, [r0, #24]
 800128a:	b90b      	cbnz	r3, 8001290 <_puts_r+0x10>
 800128c:	f000 fa48 	bl	8001720 <__sinit>
 8001290:	69ab      	ldr	r3, [r5, #24]
 8001292:	68ac      	ldr	r4, [r5, #8]
 8001294:	b913      	cbnz	r3, 800129c <_puts_r+0x1c>
 8001296:	4628      	mov	r0, r5
 8001298:	f000 fa42 	bl	8001720 <__sinit>
 800129c:	4b2c      	ldr	r3, [pc, #176]	; (8001350 <_puts_r+0xd0>)
 800129e:	429c      	cmp	r4, r3
 80012a0:	d120      	bne.n	80012e4 <_puts_r+0x64>
 80012a2:	686c      	ldr	r4, [r5, #4]
 80012a4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012a6:	07db      	lsls	r3, r3, #31
 80012a8:	d405      	bmi.n	80012b6 <_puts_r+0x36>
 80012aa:	89a3      	ldrh	r3, [r4, #12]
 80012ac:	0598      	lsls	r0, r3, #22
 80012ae:	d402      	bmi.n	80012b6 <_puts_r+0x36>
 80012b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012b2:	f000 fad3 	bl	800185c <__retarget_lock_acquire_recursive>
 80012b6:	89a3      	ldrh	r3, [r4, #12]
 80012b8:	0719      	lsls	r1, r3, #28
 80012ba:	d51d      	bpl.n	80012f8 <_puts_r+0x78>
 80012bc:	6923      	ldr	r3, [r4, #16]
 80012be:	b1db      	cbz	r3, 80012f8 <_puts_r+0x78>
 80012c0:	3e01      	subs	r6, #1
 80012c2:	68a3      	ldr	r3, [r4, #8]
 80012c4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80012c8:	3b01      	subs	r3, #1
 80012ca:	60a3      	str	r3, [r4, #8]
 80012cc:	bb39      	cbnz	r1, 800131e <_puts_r+0x9e>
 80012ce:	2b00      	cmp	r3, #0
 80012d0:	da38      	bge.n	8001344 <_puts_r+0xc4>
 80012d2:	4622      	mov	r2, r4
 80012d4:	210a      	movs	r1, #10
 80012d6:	4628      	mov	r0, r5
 80012d8:	f000 f848 	bl	800136c <__swbuf_r>
 80012dc:	3001      	adds	r0, #1
 80012de:	d011      	beq.n	8001304 <_puts_r+0x84>
 80012e0:	250a      	movs	r5, #10
 80012e2:	e011      	b.n	8001308 <_puts_r+0x88>
 80012e4:	4b1b      	ldr	r3, [pc, #108]	; (8001354 <_puts_r+0xd4>)
 80012e6:	429c      	cmp	r4, r3
 80012e8:	d101      	bne.n	80012ee <_puts_r+0x6e>
 80012ea:	68ac      	ldr	r4, [r5, #8]
 80012ec:	e7da      	b.n	80012a4 <_puts_r+0x24>
 80012ee:	4b1a      	ldr	r3, [pc, #104]	; (8001358 <_puts_r+0xd8>)
 80012f0:	429c      	cmp	r4, r3
 80012f2:	bf08      	it	eq
 80012f4:	68ec      	ldreq	r4, [r5, #12]
 80012f6:	e7d5      	b.n	80012a4 <_puts_r+0x24>
 80012f8:	4621      	mov	r1, r4
 80012fa:	4628      	mov	r0, r5
 80012fc:	f000 f888 	bl	8001410 <__swsetup_r>
 8001300:	2800      	cmp	r0, #0
 8001302:	d0dd      	beq.n	80012c0 <_puts_r+0x40>
 8001304:	f04f 35ff 	mov.w	r5, #4294967295
 8001308:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800130a:	07da      	lsls	r2, r3, #31
 800130c:	d405      	bmi.n	800131a <_puts_r+0x9a>
 800130e:	89a3      	ldrh	r3, [r4, #12]
 8001310:	059b      	lsls	r3, r3, #22
 8001312:	d402      	bmi.n	800131a <_puts_r+0x9a>
 8001314:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001316:	f000 faa2 	bl	800185e <__retarget_lock_release_recursive>
 800131a:	4628      	mov	r0, r5
 800131c:	bd70      	pop	{r4, r5, r6, pc}
 800131e:	2b00      	cmp	r3, #0
 8001320:	da04      	bge.n	800132c <_puts_r+0xac>
 8001322:	69a2      	ldr	r2, [r4, #24]
 8001324:	429a      	cmp	r2, r3
 8001326:	dc06      	bgt.n	8001336 <_puts_r+0xb6>
 8001328:	290a      	cmp	r1, #10
 800132a:	d004      	beq.n	8001336 <_puts_r+0xb6>
 800132c:	6823      	ldr	r3, [r4, #0]
 800132e:	1c5a      	adds	r2, r3, #1
 8001330:	6022      	str	r2, [r4, #0]
 8001332:	7019      	strb	r1, [r3, #0]
 8001334:	e7c5      	b.n	80012c2 <_puts_r+0x42>
 8001336:	4622      	mov	r2, r4
 8001338:	4628      	mov	r0, r5
 800133a:	f000 f817 	bl	800136c <__swbuf_r>
 800133e:	3001      	adds	r0, #1
 8001340:	d1bf      	bne.n	80012c2 <_puts_r+0x42>
 8001342:	e7df      	b.n	8001304 <_puts_r+0x84>
 8001344:	6823      	ldr	r3, [r4, #0]
 8001346:	250a      	movs	r5, #10
 8001348:	1c5a      	adds	r2, r3, #1
 800134a:	6022      	str	r2, [r4, #0]
 800134c:	701d      	strb	r5, [r3, #0]
 800134e:	e7db      	b.n	8001308 <_puts_r+0x88>
 8001350:	080022b0 	.word	0x080022b0
 8001354:	080022d0 	.word	0x080022d0
 8001358:	08002290 	.word	0x08002290

0800135c <puts>:
 800135c:	4b02      	ldr	r3, [pc, #8]	; (8001368 <puts+0xc>)
 800135e:	4601      	mov	r1, r0
 8001360:	6818      	ldr	r0, [r3, #0]
 8001362:	f7ff bf8d 	b.w	8001280 <_puts_r>
 8001366:	bf00      	nop
 8001368:	20000004 	.word	0x20000004

0800136c <__swbuf_r>:
 800136c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800136e:	460e      	mov	r6, r1
 8001370:	4614      	mov	r4, r2
 8001372:	4605      	mov	r5, r0
 8001374:	b118      	cbz	r0, 800137e <__swbuf_r+0x12>
 8001376:	6983      	ldr	r3, [r0, #24]
 8001378:	b90b      	cbnz	r3, 800137e <__swbuf_r+0x12>
 800137a:	f000 f9d1 	bl	8001720 <__sinit>
 800137e:	4b21      	ldr	r3, [pc, #132]	; (8001404 <__swbuf_r+0x98>)
 8001380:	429c      	cmp	r4, r3
 8001382:	d12b      	bne.n	80013dc <__swbuf_r+0x70>
 8001384:	686c      	ldr	r4, [r5, #4]
 8001386:	69a3      	ldr	r3, [r4, #24]
 8001388:	60a3      	str	r3, [r4, #8]
 800138a:	89a3      	ldrh	r3, [r4, #12]
 800138c:	071a      	lsls	r2, r3, #28
 800138e:	d52f      	bpl.n	80013f0 <__swbuf_r+0x84>
 8001390:	6923      	ldr	r3, [r4, #16]
 8001392:	b36b      	cbz	r3, 80013f0 <__swbuf_r+0x84>
 8001394:	6923      	ldr	r3, [r4, #16]
 8001396:	6820      	ldr	r0, [r4, #0]
 8001398:	1ac0      	subs	r0, r0, r3
 800139a:	6963      	ldr	r3, [r4, #20]
 800139c:	b2f6      	uxtb	r6, r6
 800139e:	4283      	cmp	r3, r0
 80013a0:	4637      	mov	r7, r6
 80013a2:	dc04      	bgt.n	80013ae <__swbuf_r+0x42>
 80013a4:	4621      	mov	r1, r4
 80013a6:	4628      	mov	r0, r5
 80013a8:	f000 f926 	bl	80015f8 <_fflush_r>
 80013ac:	bb30      	cbnz	r0, 80013fc <__swbuf_r+0x90>
 80013ae:	68a3      	ldr	r3, [r4, #8]
 80013b0:	3b01      	subs	r3, #1
 80013b2:	60a3      	str	r3, [r4, #8]
 80013b4:	6823      	ldr	r3, [r4, #0]
 80013b6:	1c5a      	adds	r2, r3, #1
 80013b8:	6022      	str	r2, [r4, #0]
 80013ba:	701e      	strb	r6, [r3, #0]
 80013bc:	6963      	ldr	r3, [r4, #20]
 80013be:	3001      	adds	r0, #1
 80013c0:	4283      	cmp	r3, r0
 80013c2:	d004      	beq.n	80013ce <__swbuf_r+0x62>
 80013c4:	89a3      	ldrh	r3, [r4, #12]
 80013c6:	07db      	lsls	r3, r3, #31
 80013c8:	d506      	bpl.n	80013d8 <__swbuf_r+0x6c>
 80013ca:	2e0a      	cmp	r6, #10
 80013cc:	d104      	bne.n	80013d8 <__swbuf_r+0x6c>
 80013ce:	4621      	mov	r1, r4
 80013d0:	4628      	mov	r0, r5
 80013d2:	f000 f911 	bl	80015f8 <_fflush_r>
 80013d6:	b988      	cbnz	r0, 80013fc <__swbuf_r+0x90>
 80013d8:	4638      	mov	r0, r7
 80013da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80013dc:	4b0a      	ldr	r3, [pc, #40]	; (8001408 <__swbuf_r+0x9c>)
 80013de:	429c      	cmp	r4, r3
 80013e0:	d101      	bne.n	80013e6 <__swbuf_r+0x7a>
 80013e2:	68ac      	ldr	r4, [r5, #8]
 80013e4:	e7cf      	b.n	8001386 <__swbuf_r+0x1a>
 80013e6:	4b09      	ldr	r3, [pc, #36]	; (800140c <__swbuf_r+0xa0>)
 80013e8:	429c      	cmp	r4, r3
 80013ea:	bf08      	it	eq
 80013ec:	68ec      	ldreq	r4, [r5, #12]
 80013ee:	e7ca      	b.n	8001386 <__swbuf_r+0x1a>
 80013f0:	4621      	mov	r1, r4
 80013f2:	4628      	mov	r0, r5
 80013f4:	f000 f80c 	bl	8001410 <__swsetup_r>
 80013f8:	2800      	cmp	r0, #0
 80013fa:	d0cb      	beq.n	8001394 <__swbuf_r+0x28>
 80013fc:	f04f 37ff 	mov.w	r7, #4294967295
 8001400:	e7ea      	b.n	80013d8 <__swbuf_r+0x6c>
 8001402:	bf00      	nop
 8001404:	080022b0 	.word	0x080022b0
 8001408:	080022d0 	.word	0x080022d0
 800140c:	08002290 	.word	0x08002290

08001410 <__swsetup_r>:
 8001410:	4b32      	ldr	r3, [pc, #200]	; (80014dc <__swsetup_r+0xcc>)
 8001412:	b570      	push	{r4, r5, r6, lr}
 8001414:	681d      	ldr	r5, [r3, #0]
 8001416:	4606      	mov	r6, r0
 8001418:	460c      	mov	r4, r1
 800141a:	b125      	cbz	r5, 8001426 <__swsetup_r+0x16>
 800141c:	69ab      	ldr	r3, [r5, #24]
 800141e:	b913      	cbnz	r3, 8001426 <__swsetup_r+0x16>
 8001420:	4628      	mov	r0, r5
 8001422:	f000 f97d 	bl	8001720 <__sinit>
 8001426:	4b2e      	ldr	r3, [pc, #184]	; (80014e0 <__swsetup_r+0xd0>)
 8001428:	429c      	cmp	r4, r3
 800142a:	d10f      	bne.n	800144c <__swsetup_r+0x3c>
 800142c:	686c      	ldr	r4, [r5, #4]
 800142e:	89a3      	ldrh	r3, [r4, #12]
 8001430:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001434:	0719      	lsls	r1, r3, #28
 8001436:	d42c      	bmi.n	8001492 <__swsetup_r+0x82>
 8001438:	06dd      	lsls	r5, r3, #27
 800143a:	d411      	bmi.n	8001460 <__swsetup_r+0x50>
 800143c:	2309      	movs	r3, #9
 800143e:	6033      	str	r3, [r6, #0]
 8001440:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001444:	81a3      	strh	r3, [r4, #12]
 8001446:	f04f 30ff 	mov.w	r0, #4294967295
 800144a:	e03e      	b.n	80014ca <__swsetup_r+0xba>
 800144c:	4b25      	ldr	r3, [pc, #148]	; (80014e4 <__swsetup_r+0xd4>)
 800144e:	429c      	cmp	r4, r3
 8001450:	d101      	bne.n	8001456 <__swsetup_r+0x46>
 8001452:	68ac      	ldr	r4, [r5, #8]
 8001454:	e7eb      	b.n	800142e <__swsetup_r+0x1e>
 8001456:	4b24      	ldr	r3, [pc, #144]	; (80014e8 <__swsetup_r+0xd8>)
 8001458:	429c      	cmp	r4, r3
 800145a:	bf08      	it	eq
 800145c:	68ec      	ldreq	r4, [r5, #12]
 800145e:	e7e6      	b.n	800142e <__swsetup_r+0x1e>
 8001460:	0758      	lsls	r0, r3, #29
 8001462:	d512      	bpl.n	800148a <__swsetup_r+0x7a>
 8001464:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001466:	b141      	cbz	r1, 800147a <__swsetup_r+0x6a>
 8001468:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800146c:	4299      	cmp	r1, r3
 800146e:	d002      	beq.n	8001476 <__swsetup_r+0x66>
 8001470:	4630      	mov	r0, r6
 8001472:	f000 fa5b 	bl	800192c <_free_r>
 8001476:	2300      	movs	r3, #0
 8001478:	6363      	str	r3, [r4, #52]	; 0x34
 800147a:	89a3      	ldrh	r3, [r4, #12]
 800147c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001480:	81a3      	strh	r3, [r4, #12]
 8001482:	2300      	movs	r3, #0
 8001484:	6063      	str	r3, [r4, #4]
 8001486:	6923      	ldr	r3, [r4, #16]
 8001488:	6023      	str	r3, [r4, #0]
 800148a:	89a3      	ldrh	r3, [r4, #12]
 800148c:	f043 0308 	orr.w	r3, r3, #8
 8001490:	81a3      	strh	r3, [r4, #12]
 8001492:	6923      	ldr	r3, [r4, #16]
 8001494:	b94b      	cbnz	r3, 80014aa <__swsetup_r+0x9a>
 8001496:	89a3      	ldrh	r3, [r4, #12]
 8001498:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800149c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80014a0:	d003      	beq.n	80014aa <__swsetup_r+0x9a>
 80014a2:	4621      	mov	r1, r4
 80014a4:	4630      	mov	r0, r6
 80014a6:	f000 fa01 	bl	80018ac <__smakebuf_r>
 80014aa:	89a0      	ldrh	r0, [r4, #12]
 80014ac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80014b0:	f010 0301 	ands.w	r3, r0, #1
 80014b4:	d00a      	beq.n	80014cc <__swsetup_r+0xbc>
 80014b6:	2300      	movs	r3, #0
 80014b8:	60a3      	str	r3, [r4, #8]
 80014ba:	6963      	ldr	r3, [r4, #20]
 80014bc:	425b      	negs	r3, r3
 80014be:	61a3      	str	r3, [r4, #24]
 80014c0:	6923      	ldr	r3, [r4, #16]
 80014c2:	b943      	cbnz	r3, 80014d6 <__swsetup_r+0xc6>
 80014c4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80014c8:	d1ba      	bne.n	8001440 <__swsetup_r+0x30>
 80014ca:	bd70      	pop	{r4, r5, r6, pc}
 80014cc:	0781      	lsls	r1, r0, #30
 80014ce:	bf58      	it	pl
 80014d0:	6963      	ldrpl	r3, [r4, #20]
 80014d2:	60a3      	str	r3, [r4, #8]
 80014d4:	e7f4      	b.n	80014c0 <__swsetup_r+0xb0>
 80014d6:	2000      	movs	r0, #0
 80014d8:	e7f7      	b.n	80014ca <__swsetup_r+0xba>
 80014da:	bf00      	nop
 80014dc:	20000004 	.word	0x20000004
 80014e0:	080022b0 	.word	0x080022b0
 80014e4:	080022d0 	.word	0x080022d0
 80014e8:	08002290 	.word	0x08002290

080014ec <__sflush_r>:
 80014ec:	898a      	ldrh	r2, [r1, #12]
 80014ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80014f2:	4605      	mov	r5, r0
 80014f4:	0710      	lsls	r0, r2, #28
 80014f6:	460c      	mov	r4, r1
 80014f8:	d458      	bmi.n	80015ac <__sflush_r+0xc0>
 80014fa:	684b      	ldr	r3, [r1, #4]
 80014fc:	2b00      	cmp	r3, #0
 80014fe:	dc05      	bgt.n	800150c <__sflush_r+0x20>
 8001500:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001502:	2b00      	cmp	r3, #0
 8001504:	dc02      	bgt.n	800150c <__sflush_r+0x20>
 8001506:	2000      	movs	r0, #0
 8001508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800150c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800150e:	2e00      	cmp	r6, #0
 8001510:	d0f9      	beq.n	8001506 <__sflush_r+0x1a>
 8001512:	2300      	movs	r3, #0
 8001514:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001518:	682f      	ldr	r7, [r5, #0]
 800151a:	602b      	str	r3, [r5, #0]
 800151c:	d032      	beq.n	8001584 <__sflush_r+0x98>
 800151e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001520:	89a3      	ldrh	r3, [r4, #12]
 8001522:	075a      	lsls	r2, r3, #29
 8001524:	d505      	bpl.n	8001532 <__sflush_r+0x46>
 8001526:	6863      	ldr	r3, [r4, #4]
 8001528:	1ac0      	subs	r0, r0, r3
 800152a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800152c:	b10b      	cbz	r3, 8001532 <__sflush_r+0x46>
 800152e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001530:	1ac0      	subs	r0, r0, r3
 8001532:	2300      	movs	r3, #0
 8001534:	4602      	mov	r2, r0
 8001536:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001538:	6a21      	ldr	r1, [r4, #32]
 800153a:	4628      	mov	r0, r5
 800153c:	47b0      	blx	r6
 800153e:	1c43      	adds	r3, r0, #1
 8001540:	89a3      	ldrh	r3, [r4, #12]
 8001542:	d106      	bne.n	8001552 <__sflush_r+0x66>
 8001544:	6829      	ldr	r1, [r5, #0]
 8001546:	291d      	cmp	r1, #29
 8001548:	d82c      	bhi.n	80015a4 <__sflush_r+0xb8>
 800154a:	4a2a      	ldr	r2, [pc, #168]	; (80015f4 <__sflush_r+0x108>)
 800154c:	40ca      	lsrs	r2, r1
 800154e:	07d6      	lsls	r6, r2, #31
 8001550:	d528      	bpl.n	80015a4 <__sflush_r+0xb8>
 8001552:	2200      	movs	r2, #0
 8001554:	6062      	str	r2, [r4, #4]
 8001556:	04d9      	lsls	r1, r3, #19
 8001558:	6922      	ldr	r2, [r4, #16]
 800155a:	6022      	str	r2, [r4, #0]
 800155c:	d504      	bpl.n	8001568 <__sflush_r+0x7c>
 800155e:	1c42      	adds	r2, r0, #1
 8001560:	d101      	bne.n	8001566 <__sflush_r+0x7a>
 8001562:	682b      	ldr	r3, [r5, #0]
 8001564:	b903      	cbnz	r3, 8001568 <__sflush_r+0x7c>
 8001566:	6560      	str	r0, [r4, #84]	; 0x54
 8001568:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800156a:	602f      	str	r7, [r5, #0]
 800156c:	2900      	cmp	r1, #0
 800156e:	d0ca      	beq.n	8001506 <__sflush_r+0x1a>
 8001570:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001574:	4299      	cmp	r1, r3
 8001576:	d002      	beq.n	800157e <__sflush_r+0x92>
 8001578:	4628      	mov	r0, r5
 800157a:	f000 f9d7 	bl	800192c <_free_r>
 800157e:	2000      	movs	r0, #0
 8001580:	6360      	str	r0, [r4, #52]	; 0x34
 8001582:	e7c1      	b.n	8001508 <__sflush_r+0x1c>
 8001584:	6a21      	ldr	r1, [r4, #32]
 8001586:	2301      	movs	r3, #1
 8001588:	4628      	mov	r0, r5
 800158a:	47b0      	blx	r6
 800158c:	1c41      	adds	r1, r0, #1
 800158e:	d1c7      	bne.n	8001520 <__sflush_r+0x34>
 8001590:	682b      	ldr	r3, [r5, #0]
 8001592:	2b00      	cmp	r3, #0
 8001594:	d0c4      	beq.n	8001520 <__sflush_r+0x34>
 8001596:	2b1d      	cmp	r3, #29
 8001598:	d001      	beq.n	800159e <__sflush_r+0xb2>
 800159a:	2b16      	cmp	r3, #22
 800159c:	d101      	bne.n	80015a2 <__sflush_r+0xb6>
 800159e:	602f      	str	r7, [r5, #0]
 80015a0:	e7b1      	b.n	8001506 <__sflush_r+0x1a>
 80015a2:	89a3      	ldrh	r3, [r4, #12]
 80015a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015a8:	81a3      	strh	r3, [r4, #12]
 80015aa:	e7ad      	b.n	8001508 <__sflush_r+0x1c>
 80015ac:	690f      	ldr	r7, [r1, #16]
 80015ae:	2f00      	cmp	r7, #0
 80015b0:	d0a9      	beq.n	8001506 <__sflush_r+0x1a>
 80015b2:	0793      	lsls	r3, r2, #30
 80015b4:	680e      	ldr	r6, [r1, #0]
 80015b6:	bf08      	it	eq
 80015b8:	694b      	ldreq	r3, [r1, #20]
 80015ba:	600f      	str	r7, [r1, #0]
 80015bc:	bf18      	it	ne
 80015be:	2300      	movne	r3, #0
 80015c0:	eba6 0807 	sub.w	r8, r6, r7
 80015c4:	608b      	str	r3, [r1, #8]
 80015c6:	f1b8 0f00 	cmp.w	r8, #0
 80015ca:	dd9c      	ble.n	8001506 <__sflush_r+0x1a>
 80015cc:	6a21      	ldr	r1, [r4, #32]
 80015ce:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80015d0:	4643      	mov	r3, r8
 80015d2:	463a      	mov	r2, r7
 80015d4:	4628      	mov	r0, r5
 80015d6:	47b0      	blx	r6
 80015d8:	2800      	cmp	r0, #0
 80015da:	dc06      	bgt.n	80015ea <__sflush_r+0xfe>
 80015dc:	89a3      	ldrh	r3, [r4, #12]
 80015de:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015e2:	81a3      	strh	r3, [r4, #12]
 80015e4:	f04f 30ff 	mov.w	r0, #4294967295
 80015e8:	e78e      	b.n	8001508 <__sflush_r+0x1c>
 80015ea:	4407      	add	r7, r0
 80015ec:	eba8 0800 	sub.w	r8, r8, r0
 80015f0:	e7e9      	b.n	80015c6 <__sflush_r+0xda>
 80015f2:	bf00      	nop
 80015f4:	20400001 	.word	0x20400001

080015f8 <_fflush_r>:
 80015f8:	b538      	push	{r3, r4, r5, lr}
 80015fa:	690b      	ldr	r3, [r1, #16]
 80015fc:	4605      	mov	r5, r0
 80015fe:	460c      	mov	r4, r1
 8001600:	b913      	cbnz	r3, 8001608 <_fflush_r+0x10>
 8001602:	2500      	movs	r5, #0
 8001604:	4628      	mov	r0, r5
 8001606:	bd38      	pop	{r3, r4, r5, pc}
 8001608:	b118      	cbz	r0, 8001612 <_fflush_r+0x1a>
 800160a:	6983      	ldr	r3, [r0, #24]
 800160c:	b90b      	cbnz	r3, 8001612 <_fflush_r+0x1a>
 800160e:	f000 f887 	bl	8001720 <__sinit>
 8001612:	4b14      	ldr	r3, [pc, #80]	; (8001664 <_fflush_r+0x6c>)
 8001614:	429c      	cmp	r4, r3
 8001616:	d11b      	bne.n	8001650 <_fflush_r+0x58>
 8001618:	686c      	ldr	r4, [r5, #4]
 800161a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800161e:	2b00      	cmp	r3, #0
 8001620:	d0ef      	beq.n	8001602 <_fflush_r+0xa>
 8001622:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001624:	07d0      	lsls	r0, r2, #31
 8001626:	d404      	bmi.n	8001632 <_fflush_r+0x3a>
 8001628:	0599      	lsls	r1, r3, #22
 800162a:	d402      	bmi.n	8001632 <_fflush_r+0x3a>
 800162c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800162e:	f000 f915 	bl	800185c <__retarget_lock_acquire_recursive>
 8001632:	4628      	mov	r0, r5
 8001634:	4621      	mov	r1, r4
 8001636:	f7ff ff59 	bl	80014ec <__sflush_r>
 800163a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800163c:	07da      	lsls	r2, r3, #31
 800163e:	4605      	mov	r5, r0
 8001640:	d4e0      	bmi.n	8001604 <_fflush_r+0xc>
 8001642:	89a3      	ldrh	r3, [r4, #12]
 8001644:	059b      	lsls	r3, r3, #22
 8001646:	d4dd      	bmi.n	8001604 <_fflush_r+0xc>
 8001648:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800164a:	f000 f908 	bl	800185e <__retarget_lock_release_recursive>
 800164e:	e7d9      	b.n	8001604 <_fflush_r+0xc>
 8001650:	4b05      	ldr	r3, [pc, #20]	; (8001668 <_fflush_r+0x70>)
 8001652:	429c      	cmp	r4, r3
 8001654:	d101      	bne.n	800165a <_fflush_r+0x62>
 8001656:	68ac      	ldr	r4, [r5, #8]
 8001658:	e7df      	b.n	800161a <_fflush_r+0x22>
 800165a:	4b04      	ldr	r3, [pc, #16]	; (800166c <_fflush_r+0x74>)
 800165c:	429c      	cmp	r4, r3
 800165e:	bf08      	it	eq
 8001660:	68ec      	ldreq	r4, [r5, #12]
 8001662:	e7da      	b.n	800161a <_fflush_r+0x22>
 8001664:	080022b0 	.word	0x080022b0
 8001668:	080022d0 	.word	0x080022d0
 800166c:	08002290 	.word	0x08002290

08001670 <std>:
 8001670:	2300      	movs	r3, #0
 8001672:	b510      	push	{r4, lr}
 8001674:	4604      	mov	r4, r0
 8001676:	e9c0 3300 	strd	r3, r3, [r0]
 800167a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800167e:	6083      	str	r3, [r0, #8]
 8001680:	8181      	strh	r1, [r0, #12]
 8001682:	6643      	str	r3, [r0, #100]	; 0x64
 8001684:	81c2      	strh	r2, [r0, #14]
 8001686:	6183      	str	r3, [r0, #24]
 8001688:	4619      	mov	r1, r3
 800168a:	2208      	movs	r2, #8
 800168c:	305c      	adds	r0, #92	; 0x5c
 800168e:	f7ff fdd7 	bl	8001240 <memset>
 8001692:	4b05      	ldr	r3, [pc, #20]	; (80016a8 <std+0x38>)
 8001694:	6263      	str	r3, [r4, #36]	; 0x24
 8001696:	4b05      	ldr	r3, [pc, #20]	; (80016ac <std+0x3c>)
 8001698:	62a3      	str	r3, [r4, #40]	; 0x28
 800169a:	4b05      	ldr	r3, [pc, #20]	; (80016b0 <std+0x40>)
 800169c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800169e:	4b05      	ldr	r3, [pc, #20]	; (80016b4 <std+0x44>)
 80016a0:	6224      	str	r4, [r4, #32]
 80016a2:	6323      	str	r3, [r4, #48]	; 0x30
 80016a4:	bd10      	pop	{r4, pc}
 80016a6:	bf00      	nop
 80016a8:	080020e9 	.word	0x080020e9
 80016ac:	0800210b 	.word	0x0800210b
 80016b0:	08002143 	.word	0x08002143
 80016b4:	08002167 	.word	0x08002167

080016b8 <_cleanup_r>:
 80016b8:	4901      	ldr	r1, [pc, #4]	; (80016c0 <_cleanup_r+0x8>)
 80016ba:	f000 b8af 	b.w	800181c <_fwalk_reent>
 80016be:	bf00      	nop
 80016c0:	080015f9 	.word	0x080015f9

080016c4 <__sfmoreglue>:
 80016c4:	b570      	push	{r4, r5, r6, lr}
 80016c6:	2268      	movs	r2, #104	; 0x68
 80016c8:	1e4d      	subs	r5, r1, #1
 80016ca:	4355      	muls	r5, r2
 80016cc:	460e      	mov	r6, r1
 80016ce:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80016d2:	f000 f997 	bl	8001a04 <_malloc_r>
 80016d6:	4604      	mov	r4, r0
 80016d8:	b140      	cbz	r0, 80016ec <__sfmoreglue+0x28>
 80016da:	2100      	movs	r1, #0
 80016dc:	e9c0 1600 	strd	r1, r6, [r0]
 80016e0:	300c      	adds	r0, #12
 80016e2:	60a0      	str	r0, [r4, #8]
 80016e4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80016e8:	f7ff fdaa 	bl	8001240 <memset>
 80016ec:	4620      	mov	r0, r4
 80016ee:	bd70      	pop	{r4, r5, r6, pc}

080016f0 <__sfp_lock_acquire>:
 80016f0:	4801      	ldr	r0, [pc, #4]	; (80016f8 <__sfp_lock_acquire+0x8>)
 80016f2:	f000 b8b3 	b.w	800185c <__retarget_lock_acquire_recursive>
 80016f6:	bf00      	nop
 80016f8:	2000008d 	.word	0x2000008d

080016fc <__sfp_lock_release>:
 80016fc:	4801      	ldr	r0, [pc, #4]	; (8001704 <__sfp_lock_release+0x8>)
 80016fe:	f000 b8ae 	b.w	800185e <__retarget_lock_release_recursive>
 8001702:	bf00      	nop
 8001704:	2000008d 	.word	0x2000008d

08001708 <__sinit_lock_acquire>:
 8001708:	4801      	ldr	r0, [pc, #4]	; (8001710 <__sinit_lock_acquire+0x8>)
 800170a:	f000 b8a7 	b.w	800185c <__retarget_lock_acquire_recursive>
 800170e:	bf00      	nop
 8001710:	2000008e 	.word	0x2000008e

08001714 <__sinit_lock_release>:
 8001714:	4801      	ldr	r0, [pc, #4]	; (800171c <__sinit_lock_release+0x8>)
 8001716:	f000 b8a2 	b.w	800185e <__retarget_lock_release_recursive>
 800171a:	bf00      	nop
 800171c:	2000008e 	.word	0x2000008e

08001720 <__sinit>:
 8001720:	b510      	push	{r4, lr}
 8001722:	4604      	mov	r4, r0
 8001724:	f7ff fff0 	bl	8001708 <__sinit_lock_acquire>
 8001728:	69a3      	ldr	r3, [r4, #24]
 800172a:	b11b      	cbz	r3, 8001734 <__sinit+0x14>
 800172c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001730:	f7ff bff0 	b.w	8001714 <__sinit_lock_release>
 8001734:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8001738:	6523      	str	r3, [r4, #80]	; 0x50
 800173a:	4b13      	ldr	r3, [pc, #76]	; (8001788 <__sinit+0x68>)
 800173c:	4a13      	ldr	r2, [pc, #76]	; (800178c <__sinit+0x6c>)
 800173e:	681b      	ldr	r3, [r3, #0]
 8001740:	62a2      	str	r2, [r4, #40]	; 0x28
 8001742:	42a3      	cmp	r3, r4
 8001744:	bf04      	itt	eq
 8001746:	2301      	moveq	r3, #1
 8001748:	61a3      	streq	r3, [r4, #24]
 800174a:	4620      	mov	r0, r4
 800174c:	f000 f820 	bl	8001790 <__sfp>
 8001750:	6060      	str	r0, [r4, #4]
 8001752:	4620      	mov	r0, r4
 8001754:	f000 f81c 	bl	8001790 <__sfp>
 8001758:	60a0      	str	r0, [r4, #8]
 800175a:	4620      	mov	r0, r4
 800175c:	f000 f818 	bl	8001790 <__sfp>
 8001760:	2200      	movs	r2, #0
 8001762:	60e0      	str	r0, [r4, #12]
 8001764:	2104      	movs	r1, #4
 8001766:	6860      	ldr	r0, [r4, #4]
 8001768:	f7ff ff82 	bl	8001670 <std>
 800176c:	68a0      	ldr	r0, [r4, #8]
 800176e:	2201      	movs	r2, #1
 8001770:	2109      	movs	r1, #9
 8001772:	f7ff ff7d 	bl	8001670 <std>
 8001776:	68e0      	ldr	r0, [r4, #12]
 8001778:	2202      	movs	r2, #2
 800177a:	2112      	movs	r1, #18
 800177c:	f7ff ff78 	bl	8001670 <std>
 8001780:	2301      	movs	r3, #1
 8001782:	61a3      	str	r3, [r4, #24]
 8001784:	e7d2      	b.n	800172c <__sinit+0xc>
 8001786:	bf00      	nop
 8001788:	0800228c 	.word	0x0800228c
 800178c:	080016b9 	.word	0x080016b9

08001790 <__sfp>:
 8001790:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001792:	4607      	mov	r7, r0
 8001794:	f7ff ffac 	bl	80016f0 <__sfp_lock_acquire>
 8001798:	4b1e      	ldr	r3, [pc, #120]	; (8001814 <__sfp+0x84>)
 800179a:	681e      	ldr	r6, [r3, #0]
 800179c:	69b3      	ldr	r3, [r6, #24]
 800179e:	b913      	cbnz	r3, 80017a6 <__sfp+0x16>
 80017a0:	4630      	mov	r0, r6
 80017a2:	f7ff ffbd 	bl	8001720 <__sinit>
 80017a6:	3648      	adds	r6, #72	; 0x48
 80017a8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80017ac:	3b01      	subs	r3, #1
 80017ae:	d503      	bpl.n	80017b8 <__sfp+0x28>
 80017b0:	6833      	ldr	r3, [r6, #0]
 80017b2:	b30b      	cbz	r3, 80017f8 <__sfp+0x68>
 80017b4:	6836      	ldr	r6, [r6, #0]
 80017b6:	e7f7      	b.n	80017a8 <__sfp+0x18>
 80017b8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80017bc:	b9d5      	cbnz	r5, 80017f4 <__sfp+0x64>
 80017be:	4b16      	ldr	r3, [pc, #88]	; (8001818 <__sfp+0x88>)
 80017c0:	60e3      	str	r3, [r4, #12]
 80017c2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80017c6:	6665      	str	r5, [r4, #100]	; 0x64
 80017c8:	f000 f847 	bl	800185a <__retarget_lock_init_recursive>
 80017cc:	f7ff ff96 	bl	80016fc <__sfp_lock_release>
 80017d0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80017d4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80017d8:	6025      	str	r5, [r4, #0]
 80017da:	61a5      	str	r5, [r4, #24]
 80017dc:	2208      	movs	r2, #8
 80017de:	4629      	mov	r1, r5
 80017e0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80017e4:	f7ff fd2c 	bl	8001240 <memset>
 80017e8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80017ec:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80017f0:	4620      	mov	r0, r4
 80017f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80017f4:	3468      	adds	r4, #104	; 0x68
 80017f6:	e7d9      	b.n	80017ac <__sfp+0x1c>
 80017f8:	2104      	movs	r1, #4
 80017fa:	4638      	mov	r0, r7
 80017fc:	f7ff ff62 	bl	80016c4 <__sfmoreglue>
 8001800:	4604      	mov	r4, r0
 8001802:	6030      	str	r0, [r6, #0]
 8001804:	2800      	cmp	r0, #0
 8001806:	d1d5      	bne.n	80017b4 <__sfp+0x24>
 8001808:	f7ff ff78 	bl	80016fc <__sfp_lock_release>
 800180c:	230c      	movs	r3, #12
 800180e:	603b      	str	r3, [r7, #0]
 8001810:	e7ee      	b.n	80017f0 <__sfp+0x60>
 8001812:	bf00      	nop
 8001814:	0800228c 	.word	0x0800228c
 8001818:	ffff0001 	.word	0xffff0001

0800181c <_fwalk_reent>:
 800181c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001820:	4606      	mov	r6, r0
 8001822:	4688      	mov	r8, r1
 8001824:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8001828:	2700      	movs	r7, #0
 800182a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800182e:	f1b9 0901 	subs.w	r9, r9, #1
 8001832:	d505      	bpl.n	8001840 <_fwalk_reent+0x24>
 8001834:	6824      	ldr	r4, [r4, #0]
 8001836:	2c00      	cmp	r4, #0
 8001838:	d1f7      	bne.n	800182a <_fwalk_reent+0xe>
 800183a:	4638      	mov	r0, r7
 800183c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001840:	89ab      	ldrh	r3, [r5, #12]
 8001842:	2b01      	cmp	r3, #1
 8001844:	d907      	bls.n	8001856 <_fwalk_reent+0x3a>
 8001846:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800184a:	3301      	adds	r3, #1
 800184c:	d003      	beq.n	8001856 <_fwalk_reent+0x3a>
 800184e:	4629      	mov	r1, r5
 8001850:	4630      	mov	r0, r6
 8001852:	47c0      	blx	r8
 8001854:	4307      	orrs	r7, r0
 8001856:	3568      	adds	r5, #104	; 0x68
 8001858:	e7e9      	b.n	800182e <_fwalk_reent+0x12>

0800185a <__retarget_lock_init_recursive>:
 800185a:	4770      	bx	lr

0800185c <__retarget_lock_acquire_recursive>:
 800185c:	4770      	bx	lr

0800185e <__retarget_lock_release_recursive>:
 800185e:	4770      	bx	lr

08001860 <__swhatbuf_r>:
 8001860:	b570      	push	{r4, r5, r6, lr}
 8001862:	460e      	mov	r6, r1
 8001864:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001868:	2900      	cmp	r1, #0
 800186a:	b096      	sub	sp, #88	; 0x58
 800186c:	4614      	mov	r4, r2
 800186e:	461d      	mov	r5, r3
 8001870:	da08      	bge.n	8001884 <__swhatbuf_r+0x24>
 8001872:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8001876:	2200      	movs	r2, #0
 8001878:	602a      	str	r2, [r5, #0]
 800187a:	061a      	lsls	r2, r3, #24
 800187c:	d410      	bmi.n	80018a0 <__swhatbuf_r+0x40>
 800187e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001882:	e00e      	b.n	80018a2 <__swhatbuf_r+0x42>
 8001884:	466a      	mov	r2, sp
 8001886:	f000 fc95 	bl	80021b4 <_fstat_r>
 800188a:	2800      	cmp	r0, #0
 800188c:	dbf1      	blt.n	8001872 <__swhatbuf_r+0x12>
 800188e:	9a01      	ldr	r2, [sp, #4]
 8001890:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001894:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001898:	425a      	negs	r2, r3
 800189a:	415a      	adcs	r2, r3
 800189c:	602a      	str	r2, [r5, #0]
 800189e:	e7ee      	b.n	800187e <__swhatbuf_r+0x1e>
 80018a0:	2340      	movs	r3, #64	; 0x40
 80018a2:	2000      	movs	r0, #0
 80018a4:	6023      	str	r3, [r4, #0]
 80018a6:	b016      	add	sp, #88	; 0x58
 80018a8:	bd70      	pop	{r4, r5, r6, pc}
	...

080018ac <__smakebuf_r>:
 80018ac:	898b      	ldrh	r3, [r1, #12]
 80018ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80018b0:	079d      	lsls	r5, r3, #30
 80018b2:	4606      	mov	r6, r0
 80018b4:	460c      	mov	r4, r1
 80018b6:	d507      	bpl.n	80018c8 <__smakebuf_r+0x1c>
 80018b8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80018bc:	6023      	str	r3, [r4, #0]
 80018be:	6123      	str	r3, [r4, #16]
 80018c0:	2301      	movs	r3, #1
 80018c2:	6163      	str	r3, [r4, #20]
 80018c4:	b002      	add	sp, #8
 80018c6:	bd70      	pop	{r4, r5, r6, pc}
 80018c8:	ab01      	add	r3, sp, #4
 80018ca:	466a      	mov	r2, sp
 80018cc:	f7ff ffc8 	bl	8001860 <__swhatbuf_r>
 80018d0:	9900      	ldr	r1, [sp, #0]
 80018d2:	4605      	mov	r5, r0
 80018d4:	4630      	mov	r0, r6
 80018d6:	f000 f895 	bl	8001a04 <_malloc_r>
 80018da:	b948      	cbnz	r0, 80018f0 <__smakebuf_r+0x44>
 80018dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80018e0:	059a      	lsls	r2, r3, #22
 80018e2:	d4ef      	bmi.n	80018c4 <__smakebuf_r+0x18>
 80018e4:	f023 0303 	bic.w	r3, r3, #3
 80018e8:	f043 0302 	orr.w	r3, r3, #2
 80018ec:	81a3      	strh	r3, [r4, #12]
 80018ee:	e7e3      	b.n	80018b8 <__smakebuf_r+0xc>
 80018f0:	4b0d      	ldr	r3, [pc, #52]	; (8001928 <__smakebuf_r+0x7c>)
 80018f2:	62b3      	str	r3, [r6, #40]	; 0x28
 80018f4:	89a3      	ldrh	r3, [r4, #12]
 80018f6:	6020      	str	r0, [r4, #0]
 80018f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80018fc:	81a3      	strh	r3, [r4, #12]
 80018fe:	9b00      	ldr	r3, [sp, #0]
 8001900:	6163      	str	r3, [r4, #20]
 8001902:	9b01      	ldr	r3, [sp, #4]
 8001904:	6120      	str	r0, [r4, #16]
 8001906:	b15b      	cbz	r3, 8001920 <__smakebuf_r+0x74>
 8001908:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800190c:	4630      	mov	r0, r6
 800190e:	f000 fc63 	bl	80021d8 <_isatty_r>
 8001912:	b128      	cbz	r0, 8001920 <__smakebuf_r+0x74>
 8001914:	89a3      	ldrh	r3, [r4, #12]
 8001916:	f023 0303 	bic.w	r3, r3, #3
 800191a:	f043 0301 	orr.w	r3, r3, #1
 800191e:	81a3      	strh	r3, [r4, #12]
 8001920:	89a0      	ldrh	r0, [r4, #12]
 8001922:	4305      	orrs	r5, r0
 8001924:	81a5      	strh	r5, [r4, #12]
 8001926:	e7cd      	b.n	80018c4 <__smakebuf_r+0x18>
 8001928:	080016b9 	.word	0x080016b9

0800192c <_free_r>:
 800192c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800192e:	2900      	cmp	r1, #0
 8001930:	d044      	beq.n	80019bc <_free_r+0x90>
 8001932:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001936:	9001      	str	r0, [sp, #4]
 8001938:	2b00      	cmp	r3, #0
 800193a:	f1a1 0404 	sub.w	r4, r1, #4
 800193e:	bfb8      	it	lt
 8001940:	18e4      	addlt	r4, r4, r3
 8001942:	f000 fc6b 	bl	800221c <__malloc_lock>
 8001946:	4a1e      	ldr	r2, [pc, #120]	; (80019c0 <_free_r+0x94>)
 8001948:	9801      	ldr	r0, [sp, #4]
 800194a:	6813      	ldr	r3, [r2, #0]
 800194c:	b933      	cbnz	r3, 800195c <_free_r+0x30>
 800194e:	6063      	str	r3, [r4, #4]
 8001950:	6014      	str	r4, [r2, #0]
 8001952:	b003      	add	sp, #12
 8001954:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001958:	f000 bc66 	b.w	8002228 <__malloc_unlock>
 800195c:	42a3      	cmp	r3, r4
 800195e:	d908      	bls.n	8001972 <_free_r+0x46>
 8001960:	6825      	ldr	r5, [r4, #0]
 8001962:	1961      	adds	r1, r4, r5
 8001964:	428b      	cmp	r3, r1
 8001966:	bf01      	itttt	eq
 8001968:	6819      	ldreq	r1, [r3, #0]
 800196a:	685b      	ldreq	r3, [r3, #4]
 800196c:	1949      	addeq	r1, r1, r5
 800196e:	6021      	streq	r1, [r4, #0]
 8001970:	e7ed      	b.n	800194e <_free_r+0x22>
 8001972:	461a      	mov	r2, r3
 8001974:	685b      	ldr	r3, [r3, #4]
 8001976:	b10b      	cbz	r3, 800197c <_free_r+0x50>
 8001978:	42a3      	cmp	r3, r4
 800197a:	d9fa      	bls.n	8001972 <_free_r+0x46>
 800197c:	6811      	ldr	r1, [r2, #0]
 800197e:	1855      	adds	r5, r2, r1
 8001980:	42a5      	cmp	r5, r4
 8001982:	d10b      	bne.n	800199c <_free_r+0x70>
 8001984:	6824      	ldr	r4, [r4, #0]
 8001986:	4421      	add	r1, r4
 8001988:	1854      	adds	r4, r2, r1
 800198a:	42a3      	cmp	r3, r4
 800198c:	6011      	str	r1, [r2, #0]
 800198e:	d1e0      	bne.n	8001952 <_free_r+0x26>
 8001990:	681c      	ldr	r4, [r3, #0]
 8001992:	685b      	ldr	r3, [r3, #4]
 8001994:	6053      	str	r3, [r2, #4]
 8001996:	4421      	add	r1, r4
 8001998:	6011      	str	r1, [r2, #0]
 800199a:	e7da      	b.n	8001952 <_free_r+0x26>
 800199c:	d902      	bls.n	80019a4 <_free_r+0x78>
 800199e:	230c      	movs	r3, #12
 80019a0:	6003      	str	r3, [r0, #0]
 80019a2:	e7d6      	b.n	8001952 <_free_r+0x26>
 80019a4:	6825      	ldr	r5, [r4, #0]
 80019a6:	1961      	adds	r1, r4, r5
 80019a8:	428b      	cmp	r3, r1
 80019aa:	bf04      	itt	eq
 80019ac:	6819      	ldreq	r1, [r3, #0]
 80019ae:	685b      	ldreq	r3, [r3, #4]
 80019b0:	6063      	str	r3, [r4, #4]
 80019b2:	bf04      	itt	eq
 80019b4:	1949      	addeq	r1, r1, r5
 80019b6:	6021      	streq	r1, [r4, #0]
 80019b8:	6054      	str	r4, [r2, #4]
 80019ba:	e7ca      	b.n	8001952 <_free_r+0x26>
 80019bc:	b003      	add	sp, #12
 80019be:	bd30      	pop	{r4, r5, pc}
 80019c0:	20000090 	.word	0x20000090

080019c4 <sbrk_aligned>:
 80019c4:	b570      	push	{r4, r5, r6, lr}
 80019c6:	4e0e      	ldr	r6, [pc, #56]	; (8001a00 <sbrk_aligned+0x3c>)
 80019c8:	460c      	mov	r4, r1
 80019ca:	6831      	ldr	r1, [r6, #0]
 80019cc:	4605      	mov	r5, r0
 80019ce:	b911      	cbnz	r1, 80019d6 <sbrk_aligned+0x12>
 80019d0:	f000 fb7a 	bl	80020c8 <_sbrk_r>
 80019d4:	6030      	str	r0, [r6, #0]
 80019d6:	4621      	mov	r1, r4
 80019d8:	4628      	mov	r0, r5
 80019da:	f000 fb75 	bl	80020c8 <_sbrk_r>
 80019de:	1c43      	adds	r3, r0, #1
 80019e0:	d00a      	beq.n	80019f8 <sbrk_aligned+0x34>
 80019e2:	1cc4      	adds	r4, r0, #3
 80019e4:	f024 0403 	bic.w	r4, r4, #3
 80019e8:	42a0      	cmp	r0, r4
 80019ea:	d007      	beq.n	80019fc <sbrk_aligned+0x38>
 80019ec:	1a21      	subs	r1, r4, r0
 80019ee:	4628      	mov	r0, r5
 80019f0:	f000 fb6a 	bl	80020c8 <_sbrk_r>
 80019f4:	3001      	adds	r0, #1
 80019f6:	d101      	bne.n	80019fc <sbrk_aligned+0x38>
 80019f8:	f04f 34ff 	mov.w	r4, #4294967295
 80019fc:	4620      	mov	r0, r4
 80019fe:	bd70      	pop	{r4, r5, r6, pc}
 8001a00:	20000094 	.word	0x20000094

08001a04 <_malloc_r>:
 8001a04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001a08:	1ccd      	adds	r5, r1, #3
 8001a0a:	f025 0503 	bic.w	r5, r5, #3
 8001a0e:	3508      	adds	r5, #8
 8001a10:	2d0c      	cmp	r5, #12
 8001a12:	bf38      	it	cc
 8001a14:	250c      	movcc	r5, #12
 8001a16:	2d00      	cmp	r5, #0
 8001a18:	4607      	mov	r7, r0
 8001a1a:	db01      	blt.n	8001a20 <_malloc_r+0x1c>
 8001a1c:	42a9      	cmp	r1, r5
 8001a1e:	d905      	bls.n	8001a2c <_malloc_r+0x28>
 8001a20:	230c      	movs	r3, #12
 8001a22:	603b      	str	r3, [r7, #0]
 8001a24:	2600      	movs	r6, #0
 8001a26:	4630      	mov	r0, r6
 8001a28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001a2c:	4e2e      	ldr	r6, [pc, #184]	; (8001ae8 <_malloc_r+0xe4>)
 8001a2e:	f000 fbf5 	bl	800221c <__malloc_lock>
 8001a32:	6833      	ldr	r3, [r6, #0]
 8001a34:	461c      	mov	r4, r3
 8001a36:	bb34      	cbnz	r4, 8001a86 <_malloc_r+0x82>
 8001a38:	4629      	mov	r1, r5
 8001a3a:	4638      	mov	r0, r7
 8001a3c:	f7ff ffc2 	bl	80019c4 <sbrk_aligned>
 8001a40:	1c43      	adds	r3, r0, #1
 8001a42:	4604      	mov	r4, r0
 8001a44:	d14d      	bne.n	8001ae2 <_malloc_r+0xde>
 8001a46:	6834      	ldr	r4, [r6, #0]
 8001a48:	4626      	mov	r6, r4
 8001a4a:	2e00      	cmp	r6, #0
 8001a4c:	d140      	bne.n	8001ad0 <_malloc_r+0xcc>
 8001a4e:	6823      	ldr	r3, [r4, #0]
 8001a50:	4631      	mov	r1, r6
 8001a52:	4638      	mov	r0, r7
 8001a54:	eb04 0803 	add.w	r8, r4, r3
 8001a58:	f000 fb36 	bl	80020c8 <_sbrk_r>
 8001a5c:	4580      	cmp	r8, r0
 8001a5e:	d13a      	bne.n	8001ad6 <_malloc_r+0xd2>
 8001a60:	6821      	ldr	r1, [r4, #0]
 8001a62:	3503      	adds	r5, #3
 8001a64:	1a6d      	subs	r5, r5, r1
 8001a66:	f025 0503 	bic.w	r5, r5, #3
 8001a6a:	3508      	adds	r5, #8
 8001a6c:	2d0c      	cmp	r5, #12
 8001a6e:	bf38      	it	cc
 8001a70:	250c      	movcc	r5, #12
 8001a72:	4629      	mov	r1, r5
 8001a74:	4638      	mov	r0, r7
 8001a76:	f7ff ffa5 	bl	80019c4 <sbrk_aligned>
 8001a7a:	3001      	adds	r0, #1
 8001a7c:	d02b      	beq.n	8001ad6 <_malloc_r+0xd2>
 8001a7e:	6823      	ldr	r3, [r4, #0]
 8001a80:	442b      	add	r3, r5
 8001a82:	6023      	str	r3, [r4, #0]
 8001a84:	e00e      	b.n	8001aa4 <_malloc_r+0xa0>
 8001a86:	6822      	ldr	r2, [r4, #0]
 8001a88:	1b52      	subs	r2, r2, r5
 8001a8a:	d41e      	bmi.n	8001aca <_malloc_r+0xc6>
 8001a8c:	2a0b      	cmp	r2, #11
 8001a8e:	d916      	bls.n	8001abe <_malloc_r+0xba>
 8001a90:	1961      	adds	r1, r4, r5
 8001a92:	42a3      	cmp	r3, r4
 8001a94:	6025      	str	r5, [r4, #0]
 8001a96:	bf18      	it	ne
 8001a98:	6059      	strne	r1, [r3, #4]
 8001a9a:	6863      	ldr	r3, [r4, #4]
 8001a9c:	bf08      	it	eq
 8001a9e:	6031      	streq	r1, [r6, #0]
 8001aa0:	5162      	str	r2, [r4, r5]
 8001aa2:	604b      	str	r3, [r1, #4]
 8001aa4:	4638      	mov	r0, r7
 8001aa6:	f104 060b 	add.w	r6, r4, #11
 8001aaa:	f000 fbbd 	bl	8002228 <__malloc_unlock>
 8001aae:	f026 0607 	bic.w	r6, r6, #7
 8001ab2:	1d23      	adds	r3, r4, #4
 8001ab4:	1af2      	subs	r2, r6, r3
 8001ab6:	d0b6      	beq.n	8001a26 <_malloc_r+0x22>
 8001ab8:	1b9b      	subs	r3, r3, r6
 8001aba:	50a3      	str	r3, [r4, r2]
 8001abc:	e7b3      	b.n	8001a26 <_malloc_r+0x22>
 8001abe:	6862      	ldr	r2, [r4, #4]
 8001ac0:	42a3      	cmp	r3, r4
 8001ac2:	bf0c      	ite	eq
 8001ac4:	6032      	streq	r2, [r6, #0]
 8001ac6:	605a      	strne	r2, [r3, #4]
 8001ac8:	e7ec      	b.n	8001aa4 <_malloc_r+0xa0>
 8001aca:	4623      	mov	r3, r4
 8001acc:	6864      	ldr	r4, [r4, #4]
 8001ace:	e7b2      	b.n	8001a36 <_malloc_r+0x32>
 8001ad0:	4634      	mov	r4, r6
 8001ad2:	6876      	ldr	r6, [r6, #4]
 8001ad4:	e7b9      	b.n	8001a4a <_malloc_r+0x46>
 8001ad6:	230c      	movs	r3, #12
 8001ad8:	603b      	str	r3, [r7, #0]
 8001ada:	4638      	mov	r0, r7
 8001adc:	f000 fba4 	bl	8002228 <__malloc_unlock>
 8001ae0:	e7a1      	b.n	8001a26 <_malloc_r+0x22>
 8001ae2:	6025      	str	r5, [r4, #0]
 8001ae4:	e7de      	b.n	8001aa4 <_malloc_r+0xa0>
 8001ae6:	bf00      	nop
 8001ae8:	20000090 	.word	0x20000090

08001aec <__sfputc_r>:
 8001aec:	6893      	ldr	r3, [r2, #8]
 8001aee:	3b01      	subs	r3, #1
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	b410      	push	{r4}
 8001af4:	6093      	str	r3, [r2, #8]
 8001af6:	da08      	bge.n	8001b0a <__sfputc_r+0x1e>
 8001af8:	6994      	ldr	r4, [r2, #24]
 8001afa:	42a3      	cmp	r3, r4
 8001afc:	db01      	blt.n	8001b02 <__sfputc_r+0x16>
 8001afe:	290a      	cmp	r1, #10
 8001b00:	d103      	bne.n	8001b0a <__sfputc_r+0x1e>
 8001b02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001b06:	f7ff bc31 	b.w	800136c <__swbuf_r>
 8001b0a:	6813      	ldr	r3, [r2, #0]
 8001b0c:	1c58      	adds	r0, r3, #1
 8001b0e:	6010      	str	r0, [r2, #0]
 8001b10:	7019      	strb	r1, [r3, #0]
 8001b12:	4608      	mov	r0, r1
 8001b14:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001b18:	4770      	bx	lr

08001b1a <__sfputs_r>:
 8001b1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001b1c:	4606      	mov	r6, r0
 8001b1e:	460f      	mov	r7, r1
 8001b20:	4614      	mov	r4, r2
 8001b22:	18d5      	adds	r5, r2, r3
 8001b24:	42ac      	cmp	r4, r5
 8001b26:	d101      	bne.n	8001b2c <__sfputs_r+0x12>
 8001b28:	2000      	movs	r0, #0
 8001b2a:	e007      	b.n	8001b3c <__sfputs_r+0x22>
 8001b2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001b30:	463a      	mov	r2, r7
 8001b32:	4630      	mov	r0, r6
 8001b34:	f7ff ffda 	bl	8001aec <__sfputc_r>
 8001b38:	1c43      	adds	r3, r0, #1
 8001b3a:	d1f3      	bne.n	8001b24 <__sfputs_r+0xa>
 8001b3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001b40 <_vfiprintf_r>:
 8001b40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b44:	460d      	mov	r5, r1
 8001b46:	b09d      	sub	sp, #116	; 0x74
 8001b48:	4614      	mov	r4, r2
 8001b4a:	4698      	mov	r8, r3
 8001b4c:	4606      	mov	r6, r0
 8001b4e:	b118      	cbz	r0, 8001b58 <_vfiprintf_r+0x18>
 8001b50:	6983      	ldr	r3, [r0, #24]
 8001b52:	b90b      	cbnz	r3, 8001b58 <_vfiprintf_r+0x18>
 8001b54:	f7ff fde4 	bl	8001720 <__sinit>
 8001b58:	4b89      	ldr	r3, [pc, #548]	; (8001d80 <_vfiprintf_r+0x240>)
 8001b5a:	429d      	cmp	r5, r3
 8001b5c:	d11b      	bne.n	8001b96 <_vfiprintf_r+0x56>
 8001b5e:	6875      	ldr	r5, [r6, #4]
 8001b60:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001b62:	07d9      	lsls	r1, r3, #31
 8001b64:	d405      	bmi.n	8001b72 <_vfiprintf_r+0x32>
 8001b66:	89ab      	ldrh	r3, [r5, #12]
 8001b68:	059a      	lsls	r2, r3, #22
 8001b6a:	d402      	bmi.n	8001b72 <_vfiprintf_r+0x32>
 8001b6c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001b6e:	f7ff fe75 	bl	800185c <__retarget_lock_acquire_recursive>
 8001b72:	89ab      	ldrh	r3, [r5, #12]
 8001b74:	071b      	lsls	r3, r3, #28
 8001b76:	d501      	bpl.n	8001b7c <_vfiprintf_r+0x3c>
 8001b78:	692b      	ldr	r3, [r5, #16]
 8001b7a:	b9eb      	cbnz	r3, 8001bb8 <_vfiprintf_r+0x78>
 8001b7c:	4629      	mov	r1, r5
 8001b7e:	4630      	mov	r0, r6
 8001b80:	f7ff fc46 	bl	8001410 <__swsetup_r>
 8001b84:	b1c0      	cbz	r0, 8001bb8 <_vfiprintf_r+0x78>
 8001b86:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001b88:	07dc      	lsls	r4, r3, #31
 8001b8a:	d50e      	bpl.n	8001baa <_vfiprintf_r+0x6a>
 8001b8c:	f04f 30ff 	mov.w	r0, #4294967295
 8001b90:	b01d      	add	sp, #116	; 0x74
 8001b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001b96:	4b7b      	ldr	r3, [pc, #492]	; (8001d84 <_vfiprintf_r+0x244>)
 8001b98:	429d      	cmp	r5, r3
 8001b9a:	d101      	bne.n	8001ba0 <_vfiprintf_r+0x60>
 8001b9c:	68b5      	ldr	r5, [r6, #8]
 8001b9e:	e7df      	b.n	8001b60 <_vfiprintf_r+0x20>
 8001ba0:	4b79      	ldr	r3, [pc, #484]	; (8001d88 <_vfiprintf_r+0x248>)
 8001ba2:	429d      	cmp	r5, r3
 8001ba4:	bf08      	it	eq
 8001ba6:	68f5      	ldreq	r5, [r6, #12]
 8001ba8:	e7da      	b.n	8001b60 <_vfiprintf_r+0x20>
 8001baa:	89ab      	ldrh	r3, [r5, #12]
 8001bac:	0598      	lsls	r0, r3, #22
 8001bae:	d4ed      	bmi.n	8001b8c <_vfiprintf_r+0x4c>
 8001bb0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001bb2:	f7ff fe54 	bl	800185e <__retarget_lock_release_recursive>
 8001bb6:	e7e9      	b.n	8001b8c <_vfiprintf_r+0x4c>
 8001bb8:	2300      	movs	r3, #0
 8001bba:	9309      	str	r3, [sp, #36]	; 0x24
 8001bbc:	2320      	movs	r3, #32
 8001bbe:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001bc2:	f8cd 800c 	str.w	r8, [sp, #12]
 8001bc6:	2330      	movs	r3, #48	; 0x30
 8001bc8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001d8c <_vfiprintf_r+0x24c>
 8001bcc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001bd0:	f04f 0901 	mov.w	r9, #1
 8001bd4:	4623      	mov	r3, r4
 8001bd6:	469a      	mov	sl, r3
 8001bd8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001bdc:	b10a      	cbz	r2, 8001be2 <_vfiprintf_r+0xa2>
 8001bde:	2a25      	cmp	r2, #37	; 0x25
 8001be0:	d1f9      	bne.n	8001bd6 <_vfiprintf_r+0x96>
 8001be2:	ebba 0b04 	subs.w	fp, sl, r4
 8001be6:	d00b      	beq.n	8001c00 <_vfiprintf_r+0xc0>
 8001be8:	465b      	mov	r3, fp
 8001bea:	4622      	mov	r2, r4
 8001bec:	4629      	mov	r1, r5
 8001bee:	4630      	mov	r0, r6
 8001bf0:	f7ff ff93 	bl	8001b1a <__sfputs_r>
 8001bf4:	3001      	adds	r0, #1
 8001bf6:	f000 80aa 	beq.w	8001d4e <_vfiprintf_r+0x20e>
 8001bfa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001bfc:	445a      	add	r2, fp
 8001bfe:	9209      	str	r2, [sp, #36]	; 0x24
 8001c00:	f89a 3000 	ldrb.w	r3, [sl]
 8001c04:	2b00      	cmp	r3, #0
 8001c06:	f000 80a2 	beq.w	8001d4e <_vfiprintf_r+0x20e>
 8001c0a:	2300      	movs	r3, #0
 8001c0c:	f04f 32ff 	mov.w	r2, #4294967295
 8001c10:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001c14:	f10a 0a01 	add.w	sl, sl, #1
 8001c18:	9304      	str	r3, [sp, #16]
 8001c1a:	9307      	str	r3, [sp, #28]
 8001c1c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001c20:	931a      	str	r3, [sp, #104]	; 0x68
 8001c22:	4654      	mov	r4, sl
 8001c24:	2205      	movs	r2, #5
 8001c26:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001c2a:	4858      	ldr	r0, [pc, #352]	; (8001d8c <_vfiprintf_r+0x24c>)
 8001c2c:	f7fe faf0 	bl	8000210 <memchr>
 8001c30:	9a04      	ldr	r2, [sp, #16]
 8001c32:	b9d8      	cbnz	r0, 8001c6c <_vfiprintf_r+0x12c>
 8001c34:	06d1      	lsls	r1, r2, #27
 8001c36:	bf44      	itt	mi
 8001c38:	2320      	movmi	r3, #32
 8001c3a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001c3e:	0713      	lsls	r3, r2, #28
 8001c40:	bf44      	itt	mi
 8001c42:	232b      	movmi	r3, #43	; 0x2b
 8001c44:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001c48:	f89a 3000 	ldrb.w	r3, [sl]
 8001c4c:	2b2a      	cmp	r3, #42	; 0x2a
 8001c4e:	d015      	beq.n	8001c7c <_vfiprintf_r+0x13c>
 8001c50:	9a07      	ldr	r2, [sp, #28]
 8001c52:	4654      	mov	r4, sl
 8001c54:	2000      	movs	r0, #0
 8001c56:	f04f 0c0a 	mov.w	ip, #10
 8001c5a:	4621      	mov	r1, r4
 8001c5c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001c60:	3b30      	subs	r3, #48	; 0x30
 8001c62:	2b09      	cmp	r3, #9
 8001c64:	d94e      	bls.n	8001d04 <_vfiprintf_r+0x1c4>
 8001c66:	b1b0      	cbz	r0, 8001c96 <_vfiprintf_r+0x156>
 8001c68:	9207      	str	r2, [sp, #28]
 8001c6a:	e014      	b.n	8001c96 <_vfiprintf_r+0x156>
 8001c6c:	eba0 0308 	sub.w	r3, r0, r8
 8001c70:	fa09 f303 	lsl.w	r3, r9, r3
 8001c74:	4313      	orrs	r3, r2
 8001c76:	9304      	str	r3, [sp, #16]
 8001c78:	46a2      	mov	sl, r4
 8001c7a:	e7d2      	b.n	8001c22 <_vfiprintf_r+0xe2>
 8001c7c:	9b03      	ldr	r3, [sp, #12]
 8001c7e:	1d19      	adds	r1, r3, #4
 8001c80:	681b      	ldr	r3, [r3, #0]
 8001c82:	9103      	str	r1, [sp, #12]
 8001c84:	2b00      	cmp	r3, #0
 8001c86:	bfbb      	ittet	lt
 8001c88:	425b      	neglt	r3, r3
 8001c8a:	f042 0202 	orrlt.w	r2, r2, #2
 8001c8e:	9307      	strge	r3, [sp, #28]
 8001c90:	9307      	strlt	r3, [sp, #28]
 8001c92:	bfb8      	it	lt
 8001c94:	9204      	strlt	r2, [sp, #16]
 8001c96:	7823      	ldrb	r3, [r4, #0]
 8001c98:	2b2e      	cmp	r3, #46	; 0x2e
 8001c9a:	d10c      	bne.n	8001cb6 <_vfiprintf_r+0x176>
 8001c9c:	7863      	ldrb	r3, [r4, #1]
 8001c9e:	2b2a      	cmp	r3, #42	; 0x2a
 8001ca0:	d135      	bne.n	8001d0e <_vfiprintf_r+0x1ce>
 8001ca2:	9b03      	ldr	r3, [sp, #12]
 8001ca4:	1d1a      	adds	r2, r3, #4
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	9203      	str	r2, [sp, #12]
 8001caa:	2b00      	cmp	r3, #0
 8001cac:	bfb8      	it	lt
 8001cae:	f04f 33ff 	movlt.w	r3, #4294967295
 8001cb2:	3402      	adds	r4, #2
 8001cb4:	9305      	str	r3, [sp, #20]
 8001cb6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001d9c <_vfiprintf_r+0x25c>
 8001cba:	7821      	ldrb	r1, [r4, #0]
 8001cbc:	2203      	movs	r2, #3
 8001cbe:	4650      	mov	r0, sl
 8001cc0:	f7fe faa6 	bl	8000210 <memchr>
 8001cc4:	b140      	cbz	r0, 8001cd8 <_vfiprintf_r+0x198>
 8001cc6:	2340      	movs	r3, #64	; 0x40
 8001cc8:	eba0 000a 	sub.w	r0, r0, sl
 8001ccc:	fa03 f000 	lsl.w	r0, r3, r0
 8001cd0:	9b04      	ldr	r3, [sp, #16]
 8001cd2:	4303      	orrs	r3, r0
 8001cd4:	3401      	adds	r4, #1
 8001cd6:	9304      	str	r3, [sp, #16]
 8001cd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001cdc:	482c      	ldr	r0, [pc, #176]	; (8001d90 <_vfiprintf_r+0x250>)
 8001cde:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001ce2:	2206      	movs	r2, #6
 8001ce4:	f7fe fa94 	bl	8000210 <memchr>
 8001ce8:	2800      	cmp	r0, #0
 8001cea:	d03f      	beq.n	8001d6c <_vfiprintf_r+0x22c>
 8001cec:	4b29      	ldr	r3, [pc, #164]	; (8001d94 <_vfiprintf_r+0x254>)
 8001cee:	bb1b      	cbnz	r3, 8001d38 <_vfiprintf_r+0x1f8>
 8001cf0:	9b03      	ldr	r3, [sp, #12]
 8001cf2:	3307      	adds	r3, #7
 8001cf4:	f023 0307 	bic.w	r3, r3, #7
 8001cf8:	3308      	adds	r3, #8
 8001cfa:	9303      	str	r3, [sp, #12]
 8001cfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001cfe:	443b      	add	r3, r7
 8001d00:	9309      	str	r3, [sp, #36]	; 0x24
 8001d02:	e767      	b.n	8001bd4 <_vfiprintf_r+0x94>
 8001d04:	fb0c 3202 	mla	r2, ip, r2, r3
 8001d08:	460c      	mov	r4, r1
 8001d0a:	2001      	movs	r0, #1
 8001d0c:	e7a5      	b.n	8001c5a <_vfiprintf_r+0x11a>
 8001d0e:	2300      	movs	r3, #0
 8001d10:	3401      	adds	r4, #1
 8001d12:	9305      	str	r3, [sp, #20]
 8001d14:	4619      	mov	r1, r3
 8001d16:	f04f 0c0a 	mov.w	ip, #10
 8001d1a:	4620      	mov	r0, r4
 8001d1c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001d20:	3a30      	subs	r2, #48	; 0x30
 8001d22:	2a09      	cmp	r2, #9
 8001d24:	d903      	bls.n	8001d2e <_vfiprintf_r+0x1ee>
 8001d26:	2b00      	cmp	r3, #0
 8001d28:	d0c5      	beq.n	8001cb6 <_vfiprintf_r+0x176>
 8001d2a:	9105      	str	r1, [sp, #20]
 8001d2c:	e7c3      	b.n	8001cb6 <_vfiprintf_r+0x176>
 8001d2e:	fb0c 2101 	mla	r1, ip, r1, r2
 8001d32:	4604      	mov	r4, r0
 8001d34:	2301      	movs	r3, #1
 8001d36:	e7f0      	b.n	8001d1a <_vfiprintf_r+0x1da>
 8001d38:	ab03      	add	r3, sp, #12
 8001d3a:	9300      	str	r3, [sp, #0]
 8001d3c:	462a      	mov	r2, r5
 8001d3e:	4b16      	ldr	r3, [pc, #88]	; (8001d98 <_vfiprintf_r+0x258>)
 8001d40:	a904      	add	r1, sp, #16
 8001d42:	4630      	mov	r0, r6
 8001d44:	f3af 8000 	nop.w
 8001d48:	4607      	mov	r7, r0
 8001d4a:	1c78      	adds	r0, r7, #1
 8001d4c:	d1d6      	bne.n	8001cfc <_vfiprintf_r+0x1bc>
 8001d4e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001d50:	07d9      	lsls	r1, r3, #31
 8001d52:	d405      	bmi.n	8001d60 <_vfiprintf_r+0x220>
 8001d54:	89ab      	ldrh	r3, [r5, #12]
 8001d56:	059a      	lsls	r2, r3, #22
 8001d58:	d402      	bmi.n	8001d60 <_vfiprintf_r+0x220>
 8001d5a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001d5c:	f7ff fd7f 	bl	800185e <__retarget_lock_release_recursive>
 8001d60:	89ab      	ldrh	r3, [r5, #12]
 8001d62:	065b      	lsls	r3, r3, #25
 8001d64:	f53f af12 	bmi.w	8001b8c <_vfiprintf_r+0x4c>
 8001d68:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001d6a:	e711      	b.n	8001b90 <_vfiprintf_r+0x50>
 8001d6c:	ab03      	add	r3, sp, #12
 8001d6e:	9300      	str	r3, [sp, #0]
 8001d70:	462a      	mov	r2, r5
 8001d72:	4b09      	ldr	r3, [pc, #36]	; (8001d98 <_vfiprintf_r+0x258>)
 8001d74:	a904      	add	r1, sp, #16
 8001d76:	4630      	mov	r0, r6
 8001d78:	f000 f880 	bl	8001e7c <_printf_i>
 8001d7c:	e7e4      	b.n	8001d48 <_vfiprintf_r+0x208>
 8001d7e:	bf00      	nop
 8001d80:	080022b0 	.word	0x080022b0
 8001d84:	080022d0 	.word	0x080022d0
 8001d88:	08002290 	.word	0x08002290
 8001d8c:	080022f0 	.word	0x080022f0
 8001d90:	080022fa 	.word	0x080022fa
 8001d94:	00000000 	.word	0x00000000
 8001d98:	08001b1b 	.word	0x08001b1b
 8001d9c:	080022f6 	.word	0x080022f6

08001da0 <_printf_common>:
 8001da0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001da4:	4616      	mov	r6, r2
 8001da6:	4699      	mov	r9, r3
 8001da8:	688a      	ldr	r2, [r1, #8]
 8001daa:	690b      	ldr	r3, [r1, #16]
 8001dac:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001db0:	4293      	cmp	r3, r2
 8001db2:	bfb8      	it	lt
 8001db4:	4613      	movlt	r3, r2
 8001db6:	6033      	str	r3, [r6, #0]
 8001db8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001dbc:	4607      	mov	r7, r0
 8001dbe:	460c      	mov	r4, r1
 8001dc0:	b10a      	cbz	r2, 8001dc6 <_printf_common+0x26>
 8001dc2:	3301      	adds	r3, #1
 8001dc4:	6033      	str	r3, [r6, #0]
 8001dc6:	6823      	ldr	r3, [r4, #0]
 8001dc8:	0699      	lsls	r1, r3, #26
 8001dca:	bf42      	ittt	mi
 8001dcc:	6833      	ldrmi	r3, [r6, #0]
 8001dce:	3302      	addmi	r3, #2
 8001dd0:	6033      	strmi	r3, [r6, #0]
 8001dd2:	6825      	ldr	r5, [r4, #0]
 8001dd4:	f015 0506 	ands.w	r5, r5, #6
 8001dd8:	d106      	bne.n	8001de8 <_printf_common+0x48>
 8001dda:	f104 0a19 	add.w	sl, r4, #25
 8001dde:	68e3      	ldr	r3, [r4, #12]
 8001de0:	6832      	ldr	r2, [r6, #0]
 8001de2:	1a9b      	subs	r3, r3, r2
 8001de4:	42ab      	cmp	r3, r5
 8001de6:	dc26      	bgt.n	8001e36 <_printf_common+0x96>
 8001de8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001dec:	1e13      	subs	r3, r2, #0
 8001dee:	6822      	ldr	r2, [r4, #0]
 8001df0:	bf18      	it	ne
 8001df2:	2301      	movne	r3, #1
 8001df4:	0692      	lsls	r2, r2, #26
 8001df6:	d42b      	bmi.n	8001e50 <_printf_common+0xb0>
 8001df8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001dfc:	4649      	mov	r1, r9
 8001dfe:	4638      	mov	r0, r7
 8001e00:	47c0      	blx	r8
 8001e02:	3001      	adds	r0, #1
 8001e04:	d01e      	beq.n	8001e44 <_printf_common+0xa4>
 8001e06:	6823      	ldr	r3, [r4, #0]
 8001e08:	68e5      	ldr	r5, [r4, #12]
 8001e0a:	6832      	ldr	r2, [r6, #0]
 8001e0c:	f003 0306 	and.w	r3, r3, #6
 8001e10:	2b04      	cmp	r3, #4
 8001e12:	bf08      	it	eq
 8001e14:	1aad      	subeq	r5, r5, r2
 8001e16:	68a3      	ldr	r3, [r4, #8]
 8001e18:	6922      	ldr	r2, [r4, #16]
 8001e1a:	bf0c      	ite	eq
 8001e1c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001e20:	2500      	movne	r5, #0
 8001e22:	4293      	cmp	r3, r2
 8001e24:	bfc4      	itt	gt
 8001e26:	1a9b      	subgt	r3, r3, r2
 8001e28:	18ed      	addgt	r5, r5, r3
 8001e2a:	2600      	movs	r6, #0
 8001e2c:	341a      	adds	r4, #26
 8001e2e:	42b5      	cmp	r5, r6
 8001e30:	d11a      	bne.n	8001e68 <_printf_common+0xc8>
 8001e32:	2000      	movs	r0, #0
 8001e34:	e008      	b.n	8001e48 <_printf_common+0xa8>
 8001e36:	2301      	movs	r3, #1
 8001e38:	4652      	mov	r2, sl
 8001e3a:	4649      	mov	r1, r9
 8001e3c:	4638      	mov	r0, r7
 8001e3e:	47c0      	blx	r8
 8001e40:	3001      	adds	r0, #1
 8001e42:	d103      	bne.n	8001e4c <_printf_common+0xac>
 8001e44:	f04f 30ff 	mov.w	r0, #4294967295
 8001e48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e4c:	3501      	adds	r5, #1
 8001e4e:	e7c6      	b.n	8001dde <_printf_common+0x3e>
 8001e50:	18e1      	adds	r1, r4, r3
 8001e52:	1c5a      	adds	r2, r3, #1
 8001e54:	2030      	movs	r0, #48	; 0x30
 8001e56:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001e5a:	4422      	add	r2, r4
 8001e5c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001e60:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001e64:	3302      	adds	r3, #2
 8001e66:	e7c7      	b.n	8001df8 <_printf_common+0x58>
 8001e68:	2301      	movs	r3, #1
 8001e6a:	4622      	mov	r2, r4
 8001e6c:	4649      	mov	r1, r9
 8001e6e:	4638      	mov	r0, r7
 8001e70:	47c0      	blx	r8
 8001e72:	3001      	adds	r0, #1
 8001e74:	d0e6      	beq.n	8001e44 <_printf_common+0xa4>
 8001e76:	3601      	adds	r6, #1
 8001e78:	e7d9      	b.n	8001e2e <_printf_common+0x8e>
	...

08001e7c <_printf_i>:
 8001e7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001e80:	7e0f      	ldrb	r7, [r1, #24]
 8001e82:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001e84:	2f78      	cmp	r7, #120	; 0x78
 8001e86:	4691      	mov	r9, r2
 8001e88:	4680      	mov	r8, r0
 8001e8a:	460c      	mov	r4, r1
 8001e8c:	469a      	mov	sl, r3
 8001e8e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001e92:	d807      	bhi.n	8001ea4 <_printf_i+0x28>
 8001e94:	2f62      	cmp	r7, #98	; 0x62
 8001e96:	d80a      	bhi.n	8001eae <_printf_i+0x32>
 8001e98:	2f00      	cmp	r7, #0
 8001e9a:	f000 80d8 	beq.w	800204e <_printf_i+0x1d2>
 8001e9e:	2f58      	cmp	r7, #88	; 0x58
 8001ea0:	f000 80a3 	beq.w	8001fea <_printf_i+0x16e>
 8001ea4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001ea8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001eac:	e03a      	b.n	8001f24 <_printf_i+0xa8>
 8001eae:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001eb2:	2b15      	cmp	r3, #21
 8001eb4:	d8f6      	bhi.n	8001ea4 <_printf_i+0x28>
 8001eb6:	a101      	add	r1, pc, #4	; (adr r1, 8001ebc <_printf_i+0x40>)
 8001eb8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001ebc:	08001f15 	.word	0x08001f15
 8001ec0:	08001f29 	.word	0x08001f29
 8001ec4:	08001ea5 	.word	0x08001ea5
 8001ec8:	08001ea5 	.word	0x08001ea5
 8001ecc:	08001ea5 	.word	0x08001ea5
 8001ed0:	08001ea5 	.word	0x08001ea5
 8001ed4:	08001f29 	.word	0x08001f29
 8001ed8:	08001ea5 	.word	0x08001ea5
 8001edc:	08001ea5 	.word	0x08001ea5
 8001ee0:	08001ea5 	.word	0x08001ea5
 8001ee4:	08001ea5 	.word	0x08001ea5
 8001ee8:	08002035 	.word	0x08002035
 8001eec:	08001f59 	.word	0x08001f59
 8001ef0:	08002017 	.word	0x08002017
 8001ef4:	08001ea5 	.word	0x08001ea5
 8001ef8:	08001ea5 	.word	0x08001ea5
 8001efc:	08002057 	.word	0x08002057
 8001f00:	08001ea5 	.word	0x08001ea5
 8001f04:	08001f59 	.word	0x08001f59
 8001f08:	08001ea5 	.word	0x08001ea5
 8001f0c:	08001ea5 	.word	0x08001ea5
 8001f10:	0800201f 	.word	0x0800201f
 8001f14:	682b      	ldr	r3, [r5, #0]
 8001f16:	1d1a      	adds	r2, r3, #4
 8001f18:	681b      	ldr	r3, [r3, #0]
 8001f1a:	602a      	str	r2, [r5, #0]
 8001f1c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001f20:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001f24:	2301      	movs	r3, #1
 8001f26:	e0a3      	b.n	8002070 <_printf_i+0x1f4>
 8001f28:	6820      	ldr	r0, [r4, #0]
 8001f2a:	6829      	ldr	r1, [r5, #0]
 8001f2c:	0606      	lsls	r6, r0, #24
 8001f2e:	f101 0304 	add.w	r3, r1, #4
 8001f32:	d50a      	bpl.n	8001f4a <_printf_i+0xce>
 8001f34:	680e      	ldr	r6, [r1, #0]
 8001f36:	602b      	str	r3, [r5, #0]
 8001f38:	2e00      	cmp	r6, #0
 8001f3a:	da03      	bge.n	8001f44 <_printf_i+0xc8>
 8001f3c:	232d      	movs	r3, #45	; 0x2d
 8001f3e:	4276      	negs	r6, r6
 8001f40:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001f44:	485e      	ldr	r0, [pc, #376]	; (80020c0 <_printf_i+0x244>)
 8001f46:	230a      	movs	r3, #10
 8001f48:	e019      	b.n	8001f7e <_printf_i+0x102>
 8001f4a:	680e      	ldr	r6, [r1, #0]
 8001f4c:	602b      	str	r3, [r5, #0]
 8001f4e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001f52:	bf18      	it	ne
 8001f54:	b236      	sxthne	r6, r6
 8001f56:	e7ef      	b.n	8001f38 <_printf_i+0xbc>
 8001f58:	682b      	ldr	r3, [r5, #0]
 8001f5a:	6820      	ldr	r0, [r4, #0]
 8001f5c:	1d19      	adds	r1, r3, #4
 8001f5e:	6029      	str	r1, [r5, #0]
 8001f60:	0601      	lsls	r1, r0, #24
 8001f62:	d501      	bpl.n	8001f68 <_printf_i+0xec>
 8001f64:	681e      	ldr	r6, [r3, #0]
 8001f66:	e002      	b.n	8001f6e <_printf_i+0xf2>
 8001f68:	0646      	lsls	r6, r0, #25
 8001f6a:	d5fb      	bpl.n	8001f64 <_printf_i+0xe8>
 8001f6c:	881e      	ldrh	r6, [r3, #0]
 8001f6e:	4854      	ldr	r0, [pc, #336]	; (80020c0 <_printf_i+0x244>)
 8001f70:	2f6f      	cmp	r7, #111	; 0x6f
 8001f72:	bf0c      	ite	eq
 8001f74:	2308      	moveq	r3, #8
 8001f76:	230a      	movne	r3, #10
 8001f78:	2100      	movs	r1, #0
 8001f7a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001f7e:	6865      	ldr	r5, [r4, #4]
 8001f80:	60a5      	str	r5, [r4, #8]
 8001f82:	2d00      	cmp	r5, #0
 8001f84:	bfa2      	ittt	ge
 8001f86:	6821      	ldrge	r1, [r4, #0]
 8001f88:	f021 0104 	bicge.w	r1, r1, #4
 8001f8c:	6021      	strge	r1, [r4, #0]
 8001f8e:	b90e      	cbnz	r6, 8001f94 <_printf_i+0x118>
 8001f90:	2d00      	cmp	r5, #0
 8001f92:	d04d      	beq.n	8002030 <_printf_i+0x1b4>
 8001f94:	4615      	mov	r5, r2
 8001f96:	fbb6 f1f3 	udiv	r1, r6, r3
 8001f9a:	fb03 6711 	mls	r7, r3, r1, r6
 8001f9e:	5dc7      	ldrb	r7, [r0, r7]
 8001fa0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001fa4:	4637      	mov	r7, r6
 8001fa6:	42bb      	cmp	r3, r7
 8001fa8:	460e      	mov	r6, r1
 8001faa:	d9f4      	bls.n	8001f96 <_printf_i+0x11a>
 8001fac:	2b08      	cmp	r3, #8
 8001fae:	d10b      	bne.n	8001fc8 <_printf_i+0x14c>
 8001fb0:	6823      	ldr	r3, [r4, #0]
 8001fb2:	07de      	lsls	r6, r3, #31
 8001fb4:	d508      	bpl.n	8001fc8 <_printf_i+0x14c>
 8001fb6:	6923      	ldr	r3, [r4, #16]
 8001fb8:	6861      	ldr	r1, [r4, #4]
 8001fba:	4299      	cmp	r1, r3
 8001fbc:	bfde      	ittt	le
 8001fbe:	2330      	movle	r3, #48	; 0x30
 8001fc0:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001fc4:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001fc8:	1b52      	subs	r2, r2, r5
 8001fca:	6122      	str	r2, [r4, #16]
 8001fcc:	f8cd a000 	str.w	sl, [sp]
 8001fd0:	464b      	mov	r3, r9
 8001fd2:	aa03      	add	r2, sp, #12
 8001fd4:	4621      	mov	r1, r4
 8001fd6:	4640      	mov	r0, r8
 8001fd8:	f7ff fee2 	bl	8001da0 <_printf_common>
 8001fdc:	3001      	adds	r0, #1
 8001fde:	d14c      	bne.n	800207a <_printf_i+0x1fe>
 8001fe0:	f04f 30ff 	mov.w	r0, #4294967295
 8001fe4:	b004      	add	sp, #16
 8001fe6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001fea:	4835      	ldr	r0, [pc, #212]	; (80020c0 <_printf_i+0x244>)
 8001fec:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001ff0:	6829      	ldr	r1, [r5, #0]
 8001ff2:	6823      	ldr	r3, [r4, #0]
 8001ff4:	f851 6b04 	ldr.w	r6, [r1], #4
 8001ff8:	6029      	str	r1, [r5, #0]
 8001ffa:	061d      	lsls	r5, r3, #24
 8001ffc:	d514      	bpl.n	8002028 <_printf_i+0x1ac>
 8001ffe:	07df      	lsls	r7, r3, #31
 8002000:	bf44      	itt	mi
 8002002:	f043 0320 	orrmi.w	r3, r3, #32
 8002006:	6023      	strmi	r3, [r4, #0]
 8002008:	b91e      	cbnz	r6, 8002012 <_printf_i+0x196>
 800200a:	6823      	ldr	r3, [r4, #0]
 800200c:	f023 0320 	bic.w	r3, r3, #32
 8002010:	6023      	str	r3, [r4, #0]
 8002012:	2310      	movs	r3, #16
 8002014:	e7b0      	b.n	8001f78 <_printf_i+0xfc>
 8002016:	6823      	ldr	r3, [r4, #0]
 8002018:	f043 0320 	orr.w	r3, r3, #32
 800201c:	6023      	str	r3, [r4, #0]
 800201e:	2378      	movs	r3, #120	; 0x78
 8002020:	4828      	ldr	r0, [pc, #160]	; (80020c4 <_printf_i+0x248>)
 8002022:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002026:	e7e3      	b.n	8001ff0 <_printf_i+0x174>
 8002028:	0659      	lsls	r1, r3, #25
 800202a:	bf48      	it	mi
 800202c:	b2b6      	uxthmi	r6, r6
 800202e:	e7e6      	b.n	8001ffe <_printf_i+0x182>
 8002030:	4615      	mov	r5, r2
 8002032:	e7bb      	b.n	8001fac <_printf_i+0x130>
 8002034:	682b      	ldr	r3, [r5, #0]
 8002036:	6826      	ldr	r6, [r4, #0]
 8002038:	6961      	ldr	r1, [r4, #20]
 800203a:	1d18      	adds	r0, r3, #4
 800203c:	6028      	str	r0, [r5, #0]
 800203e:	0635      	lsls	r5, r6, #24
 8002040:	681b      	ldr	r3, [r3, #0]
 8002042:	d501      	bpl.n	8002048 <_printf_i+0x1cc>
 8002044:	6019      	str	r1, [r3, #0]
 8002046:	e002      	b.n	800204e <_printf_i+0x1d2>
 8002048:	0670      	lsls	r0, r6, #25
 800204a:	d5fb      	bpl.n	8002044 <_printf_i+0x1c8>
 800204c:	8019      	strh	r1, [r3, #0]
 800204e:	2300      	movs	r3, #0
 8002050:	6123      	str	r3, [r4, #16]
 8002052:	4615      	mov	r5, r2
 8002054:	e7ba      	b.n	8001fcc <_printf_i+0x150>
 8002056:	682b      	ldr	r3, [r5, #0]
 8002058:	1d1a      	adds	r2, r3, #4
 800205a:	602a      	str	r2, [r5, #0]
 800205c:	681d      	ldr	r5, [r3, #0]
 800205e:	6862      	ldr	r2, [r4, #4]
 8002060:	2100      	movs	r1, #0
 8002062:	4628      	mov	r0, r5
 8002064:	f7fe f8d4 	bl	8000210 <memchr>
 8002068:	b108      	cbz	r0, 800206e <_printf_i+0x1f2>
 800206a:	1b40      	subs	r0, r0, r5
 800206c:	6060      	str	r0, [r4, #4]
 800206e:	6863      	ldr	r3, [r4, #4]
 8002070:	6123      	str	r3, [r4, #16]
 8002072:	2300      	movs	r3, #0
 8002074:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002078:	e7a8      	b.n	8001fcc <_printf_i+0x150>
 800207a:	6923      	ldr	r3, [r4, #16]
 800207c:	462a      	mov	r2, r5
 800207e:	4649      	mov	r1, r9
 8002080:	4640      	mov	r0, r8
 8002082:	47d0      	blx	sl
 8002084:	3001      	adds	r0, #1
 8002086:	d0ab      	beq.n	8001fe0 <_printf_i+0x164>
 8002088:	6823      	ldr	r3, [r4, #0]
 800208a:	079b      	lsls	r3, r3, #30
 800208c:	d413      	bmi.n	80020b6 <_printf_i+0x23a>
 800208e:	68e0      	ldr	r0, [r4, #12]
 8002090:	9b03      	ldr	r3, [sp, #12]
 8002092:	4298      	cmp	r0, r3
 8002094:	bfb8      	it	lt
 8002096:	4618      	movlt	r0, r3
 8002098:	e7a4      	b.n	8001fe4 <_printf_i+0x168>
 800209a:	2301      	movs	r3, #1
 800209c:	4632      	mov	r2, r6
 800209e:	4649      	mov	r1, r9
 80020a0:	4640      	mov	r0, r8
 80020a2:	47d0      	blx	sl
 80020a4:	3001      	adds	r0, #1
 80020a6:	d09b      	beq.n	8001fe0 <_printf_i+0x164>
 80020a8:	3501      	adds	r5, #1
 80020aa:	68e3      	ldr	r3, [r4, #12]
 80020ac:	9903      	ldr	r1, [sp, #12]
 80020ae:	1a5b      	subs	r3, r3, r1
 80020b0:	42ab      	cmp	r3, r5
 80020b2:	dcf2      	bgt.n	800209a <_printf_i+0x21e>
 80020b4:	e7eb      	b.n	800208e <_printf_i+0x212>
 80020b6:	2500      	movs	r5, #0
 80020b8:	f104 0619 	add.w	r6, r4, #25
 80020bc:	e7f5      	b.n	80020aa <_printf_i+0x22e>
 80020be:	bf00      	nop
 80020c0:	08002301 	.word	0x08002301
 80020c4:	08002312 	.word	0x08002312

080020c8 <_sbrk_r>:
 80020c8:	b538      	push	{r3, r4, r5, lr}
 80020ca:	4d06      	ldr	r5, [pc, #24]	; (80020e4 <_sbrk_r+0x1c>)
 80020cc:	2300      	movs	r3, #0
 80020ce:	4604      	mov	r4, r0
 80020d0:	4608      	mov	r0, r1
 80020d2:	602b      	str	r3, [r5, #0]
 80020d4:	f7ff f804 	bl	80010e0 <_sbrk>
 80020d8:	1c43      	adds	r3, r0, #1
 80020da:	d102      	bne.n	80020e2 <_sbrk_r+0x1a>
 80020dc:	682b      	ldr	r3, [r5, #0]
 80020de:	b103      	cbz	r3, 80020e2 <_sbrk_r+0x1a>
 80020e0:	6023      	str	r3, [r4, #0]
 80020e2:	bd38      	pop	{r3, r4, r5, pc}
 80020e4:	20000098 	.word	0x20000098

080020e8 <__sread>:
 80020e8:	b510      	push	{r4, lr}
 80020ea:	460c      	mov	r4, r1
 80020ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80020f0:	f000 f8a0 	bl	8002234 <_read_r>
 80020f4:	2800      	cmp	r0, #0
 80020f6:	bfab      	itete	ge
 80020f8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80020fa:	89a3      	ldrhlt	r3, [r4, #12]
 80020fc:	181b      	addge	r3, r3, r0
 80020fe:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002102:	bfac      	ite	ge
 8002104:	6563      	strge	r3, [r4, #84]	; 0x54
 8002106:	81a3      	strhlt	r3, [r4, #12]
 8002108:	bd10      	pop	{r4, pc}

0800210a <__swrite>:
 800210a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800210e:	461f      	mov	r7, r3
 8002110:	898b      	ldrh	r3, [r1, #12]
 8002112:	05db      	lsls	r3, r3, #23
 8002114:	4605      	mov	r5, r0
 8002116:	460c      	mov	r4, r1
 8002118:	4616      	mov	r6, r2
 800211a:	d505      	bpl.n	8002128 <__swrite+0x1e>
 800211c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002120:	2302      	movs	r3, #2
 8002122:	2200      	movs	r2, #0
 8002124:	f000 f868 	bl	80021f8 <_lseek_r>
 8002128:	89a3      	ldrh	r3, [r4, #12]
 800212a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800212e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002132:	81a3      	strh	r3, [r4, #12]
 8002134:	4632      	mov	r2, r6
 8002136:	463b      	mov	r3, r7
 8002138:	4628      	mov	r0, r5
 800213a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800213e:	f000 b817 	b.w	8002170 <_write_r>

08002142 <__sseek>:
 8002142:	b510      	push	{r4, lr}
 8002144:	460c      	mov	r4, r1
 8002146:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800214a:	f000 f855 	bl	80021f8 <_lseek_r>
 800214e:	1c43      	adds	r3, r0, #1
 8002150:	89a3      	ldrh	r3, [r4, #12]
 8002152:	bf15      	itete	ne
 8002154:	6560      	strne	r0, [r4, #84]	; 0x54
 8002156:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800215a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800215e:	81a3      	strheq	r3, [r4, #12]
 8002160:	bf18      	it	ne
 8002162:	81a3      	strhne	r3, [r4, #12]
 8002164:	bd10      	pop	{r4, pc}

08002166 <__sclose>:
 8002166:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800216a:	f000 b813 	b.w	8002194 <_close_r>
	...

08002170 <_write_r>:
 8002170:	b538      	push	{r3, r4, r5, lr}
 8002172:	4d07      	ldr	r5, [pc, #28]	; (8002190 <_write_r+0x20>)
 8002174:	4604      	mov	r4, r0
 8002176:	4608      	mov	r0, r1
 8002178:	4611      	mov	r1, r2
 800217a:	2200      	movs	r2, #0
 800217c:	602a      	str	r2, [r5, #0]
 800217e:	461a      	mov	r2, r3
 8002180:	f7fe ff5d 	bl	800103e <_write>
 8002184:	1c43      	adds	r3, r0, #1
 8002186:	d102      	bne.n	800218e <_write_r+0x1e>
 8002188:	682b      	ldr	r3, [r5, #0]
 800218a:	b103      	cbz	r3, 800218e <_write_r+0x1e>
 800218c:	6023      	str	r3, [r4, #0]
 800218e:	bd38      	pop	{r3, r4, r5, pc}
 8002190:	20000098 	.word	0x20000098

08002194 <_close_r>:
 8002194:	b538      	push	{r3, r4, r5, lr}
 8002196:	4d06      	ldr	r5, [pc, #24]	; (80021b0 <_close_r+0x1c>)
 8002198:	2300      	movs	r3, #0
 800219a:	4604      	mov	r4, r0
 800219c:	4608      	mov	r0, r1
 800219e:	602b      	str	r3, [r5, #0]
 80021a0:	f7fe ff69 	bl	8001076 <_close>
 80021a4:	1c43      	adds	r3, r0, #1
 80021a6:	d102      	bne.n	80021ae <_close_r+0x1a>
 80021a8:	682b      	ldr	r3, [r5, #0]
 80021aa:	b103      	cbz	r3, 80021ae <_close_r+0x1a>
 80021ac:	6023      	str	r3, [r4, #0]
 80021ae:	bd38      	pop	{r3, r4, r5, pc}
 80021b0:	20000098 	.word	0x20000098

080021b4 <_fstat_r>:
 80021b4:	b538      	push	{r3, r4, r5, lr}
 80021b6:	4d07      	ldr	r5, [pc, #28]	; (80021d4 <_fstat_r+0x20>)
 80021b8:	2300      	movs	r3, #0
 80021ba:	4604      	mov	r4, r0
 80021bc:	4608      	mov	r0, r1
 80021be:	4611      	mov	r1, r2
 80021c0:	602b      	str	r3, [r5, #0]
 80021c2:	f7fe ff64 	bl	800108e <_fstat>
 80021c6:	1c43      	adds	r3, r0, #1
 80021c8:	d102      	bne.n	80021d0 <_fstat_r+0x1c>
 80021ca:	682b      	ldr	r3, [r5, #0]
 80021cc:	b103      	cbz	r3, 80021d0 <_fstat_r+0x1c>
 80021ce:	6023      	str	r3, [r4, #0]
 80021d0:	bd38      	pop	{r3, r4, r5, pc}
 80021d2:	bf00      	nop
 80021d4:	20000098 	.word	0x20000098

080021d8 <_isatty_r>:
 80021d8:	b538      	push	{r3, r4, r5, lr}
 80021da:	4d06      	ldr	r5, [pc, #24]	; (80021f4 <_isatty_r+0x1c>)
 80021dc:	2300      	movs	r3, #0
 80021de:	4604      	mov	r4, r0
 80021e0:	4608      	mov	r0, r1
 80021e2:	602b      	str	r3, [r5, #0]
 80021e4:	f7fe ff63 	bl	80010ae <_isatty>
 80021e8:	1c43      	adds	r3, r0, #1
 80021ea:	d102      	bne.n	80021f2 <_isatty_r+0x1a>
 80021ec:	682b      	ldr	r3, [r5, #0]
 80021ee:	b103      	cbz	r3, 80021f2 <_isatty_r+0x1a>
 80021f0:	6023      	str	r3, [r4, #0]
 80021f2:	bd38      	pop	{r3, r4, r5, pc}
 80021f4:	20000098 	.word	0x20000098

080021f8 <_lseek_r>:
 80021f8:	b538      	push	{r3, r4, r5, lr}
 80021fa:	4d07      	ldr	r5, [pc, #28]	; (8002218 <_lseek_r+0x20>)
 80021fc:	4604      	mov	r4, r0
 80021fe:	4608      	mov	r0, r1
 8002200:	4611      	mov	r1, r2
 8002202:	2200      	movs	r2, #0
 8002204:	602a      	str	r2, [r5, #0]
 8002206:	461a      	mov	r2, r3
 8002208:	f7fe ff5c 	bl	80010c4 <_lseek>
 800220c:	1c43      	adds	r3, r0, #1
 800220e:	d102      	bne.n	8002216 <_lseek_r+0x1e>
 8002210:	682b      	ldr	r3, [r5, #0]
 8002212:	b103      	cbz	r3, 8002216 <_lseek_r+0x1e>
 8002214:	6023      	str	r3, [r4, #0]
 8002216:	bd38      	pop	{r3, r4, r5, pc}
 8002218:	20000098 	.word	0x20000098

0800221c <__malloc_lock>:
 800221c:	4801      	ldr	r0, [pc, #4]	; (8002224 <__malloc_lock+0x8>)
 800221e:	f7ff bb1d 	b.w	800185c <__retarget_lock_acquire_recursive>
 8002222:	bf00      	nop
 8002224:	2000008c 	.word	0x2000008c

08002228 <__malloc_unlock>:
 8002228:	4801      	ldr	r0, [pc, #4]	; (8002230 <__malloc_unlock+0x8>)
 800222a:	f7ff bb18 	b.w	800185e <__retarget_lock_release_recursive>
 800222e:	bf00      	nop
 8002230:	2000008c 	.word	0x2000008c

08002234 <_read_r>:
 8002234:	b538      	push	{r3, r4, r5, lr}
 8002236:	4d07      	ldr	r5, [pc, #28]	; (8002254 <_read_r+0x20>)
 8002238:	4604      	mov	r4, r0
 800223a:	4608      	mov	r0, r1
 800223c:	4611      	mov	r1, r2
 800223e:	2200      	movs	r2, #0
 8002240:	602a      	str	r2, [r5, #0]
 8002242:	461a      	mov	r2, r3
 8002244:	f7fe fede 	bl	8001004 <_read>
 8002248:	1c43      	adds	r3, r0, #1
 800224a:	d102      	bne.n	8002252 <_read_r+0x1e>
 800224c:	682b      	ldr	r3, [r5, #0]
 800224e:	b103      	cbz	r3, 8002252 <_read_r+0x1e>
 8002250:	6023      	str	r3, [r4, #0]
 8002252:	bd38      	pop	{r3, r4, r5, pc}
 8002254:	20000098 	.word	0x20000098

08002258 <_init>:
 8002258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800225a:	bf00      	nop
 800225c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800225e:	bc08      	pop	{r3}
 8002260:	469e      	mov	lr, r3
 8002262:	4770      	bx	lr

08002264 <_fini>:
 8002264:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002266:	bf00      	nop
 8002268:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800226a:	bc08      	pop	{r3}
 800226c:	469e      	mov	lr, r3
 800226e:	4770      	bx	lr
